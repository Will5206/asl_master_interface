{"remainingRequest":"/Users/will5206/Desktop/master_interface/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/will5206/Desktop/master_interface/src/components/Search.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/will5206/Desktop/master_interface/src/components/Search.vue","mtime":1705646185481},{"path":"/Users/will5206/Desktop/master_interface/node_modules/cache-loader/dist/cjs.js","mtime":1704319707089},{"path":"/Users/will5206/Desktop/master_interface/node_modules/babel-loader/lib/index.js","mtime":1704319707261},{"path":"/Users/will5206/Desktop/master_interface/node_modules/cache-loader/dist/cjs.js","mtime":1704319707089},{"path":"/Users/will5206/Desktop/master_interface/node_modules/vue-loader/lib/index.js","mtime":1704319707297}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBTZWFyY2hSZXN1bHQgZnJvbSAiLi9TZWFyY2hSZXN1bHQudnVlIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiU2VhcmNoIiwKICBjb21wb25lbnRzOiB7IFNlYXJjaFJlc3VsdCB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkdXJhdGlvbk9mU2VsZWN0aW9uU3RyaW5nOiAiIiwKICAgICAgcmVxdWVzdGVkU2VhcmNoOiBmYWxzZSwKICAgICAgc3RhbGVSZXN1bHRzOiB0cnVlLAogICAgICBmaWx0ZXJlZFNpZ25zOiBbXSwKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgcHJlcGFyZWRSZXN1bHRzOiBmdW5jdGlvbiAoKSB7CiAgICAgIGxldCBzaWducyA9IFtdLAogICAgICAgIG4gPSB0aGlzLmZpbHRlcmVkU2lnbnMubGVuZ3RoLCAvLyBudW1iZXIgb2YgY29scwogICAgICAgIGluZGV4ZXMgPSBuZXcgQXJyYXkobikuZmlsbCgwKSwgLy8gaW50ZXJuYWwgcG9pbnRlciBpbiBlYWNoIGNvbAogICAgICAgIGNvbHMgPSBbLi4uQXJyYXkobikua2V5cygpXTsgLy8gd2hpY2ggY29scyBhcmUgc3RpbGwgYXZhaWxhYmxlPwogICAgICAvL2NvbnNvbGUubG9nKCJUaGUgc2lnbnMgYXJlOiAiICsgSlNPTi5zdHJpbmdpZnkodGhpcy5maWx0ZXJlZFNpZ25zKSk7CiAgICAgIC8vY29uc29sZS5sb2coIlRoZSBzaWducyAoc2hvcnRlbmVkKSBhcmU6ICIgKyBKU09OLnN0cmluZ2lmeSh0aGlzLmZpbHRlcmVkU2lnbnMuc2lnbnMpKTsKICAgICAgY29uc29sZS5sb2coCiAgICAgICAgIlRoZSBpbmRleGVzIGFyZTogIiArCiAgICAgICAgICB0aGlzLnNpZ25zICsKICAgICAgICAgICIsIExlbmd0aDogIiArCiAgICAgICAgICB0aGlzLnNpZ25zWzBdLnNpZ25zLmxlbmd0aAogICAgICApOwogICAgICBjb25zb2xlLmxvZygiVGhlIGNvbHVtbnMgYXJlOiAiICsgY29scyArICIsIExlbmd0aDogIiArIGNvbHMubGVuZ3RoKTsKCiAgICAgIGxldCBsYXJnZXN0SW5kZXhMZW5ndGggPSAwOwogICAgICBmb3IgKGNvbnN0IGkgaW4gaW5kZXhlcykgewogICAgICAgIGlmICh0aGlzLnNpZ25zW2ldLnNpZ25zLmxlbmd0aCA+IGxhcmdlc3RJbmRleExlbmd0aCkgewogICAgICAgICAgbGFyZ2VzdEluZGV4TGVuZ3RoID0gdGhpcy5zaWduc1tpXS5zaWducy5sZW5ndGg7CiAgICAgICAgICBjb25zb2xlLmxvZygiTmV3IExlbmd0aCEgTm93ICIgKyBsYXJnZXN0SW5kZXhMZW5ndGgpOwogICAgICAgIH0KICAgICAgfQogICAgICBjb25zb2xlLmxvZygiVGhlIGxhcmdlc3QgaW5kZXggaXMgIiArIGxhcmdlc3RJbmRleExlbmd0aCk7CgogICAgICAvKiB3aGlsZSAoY29scy5sZW5ndGggPiAwKSB7CiAgICAgICAgICBjb2xzLmZvckVhY2goKGNvbCxpbmRleENvbCk9PnsKICAgICAgICAgICAgcmVzdWx0cy5wdXNoKHRoaXMuZmlsdGVyZWRTaWduc1tjb2xdLnNpZ25zWzBdKTsKICAgICAgICAgICAgdGhpcy5maWx0ZXJlZFNpZ25zW2NvbF0uc2lnbnMuc3BsaWNlKDAsMSk7CiAgICAgICAgICB9KQogICAgICAgIH0qLwoKICAgICAgZm9yICgKICAgICAgICBsZXQgaW5kZXhOdW1iZXIgPSAwOwogICAgICAgIGluZGV4TnVtYmVyIDwgbGFyZ2VzdEluZGV4TGVuZ3RoOwogICAgICAgIGluZGV4TnVtYmVyKysKICAgICAgKSB7CiAgICAgICAgLy8geQogICAgICAgIGZvciAoY29uc3QgaW5kZXhDb2x1bW4gaW4gY29scykgewogICAgICAgICAgLy8geAogICAgICAgICAgaWYgKAogICAgICAgICAgICBKU09OLnN0cmluZ2lmeSgKICAgICAgICAgICAgICB0aGlzLmZpbHRlcmVkU2lnbnNbY29sc1tpbmRleENvbHVtbl1dLnNpZ25zW2luZGV4TnVtYmVyXQogICAgICAgICAgICApICE9IHVuZGVmaW5lZAogICAgICAgICAgKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKAogICAgICAgICAgICAgIGluZGV4Q29sdW1uICsKICAgICAgICAgICAgICAgICIsICIgKwogICAgICAgICAgICAgICAgaW5kZXhOdW1iZXIgKwogICAgICAgICAgICAgICAgIjsgIiArCiAgICAgICAgICAgICAgICBKU09OLnN0cmluZ2lmeSgKICAgICAgICAgICAgICAgICAgdGhpcy5maWx0ZXJlZFNpZ25zW2NvbHNbaW5kZXhDb2x1bW5dXS5zaWduc1tpbmRleE51bWJlcl0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgKTsKICAgICAgICAgICAgc2lnbnMucHVzaCgKICAgICAgICAgICAgICB0aGlzLmZpbHRlcmVkU2lnbnNbY29sc1tpbmRleENvbHVtbl1dLnNpZ25zW2luZGV4TnVtYmVyXQogICAgICAgICAgICApOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgICAvKndoaWxlIChzaWducy5sZW5ndGggPCA1MCAmJiBjb2xzLmxlbmd0aCA+IDApIHsKICAgICAgICAgIGxldCBpID0gcGFyc2VJbnQoTWF0aC5yYW5kb20oKSAqIGNvbHMubGVuZ3RoKTsKICAgICAgICAgIHNpZ25zLnB1c2godGhpcy5maWx0ZXJlZFNpZ25zW2NvbHNbaV1dLnNpZ25zW2luZGV4ZXNbY29sc1tpXV1dKTsKICAgICAgICAgIGluZGV4ZXNbY29sc1tpXV0rKzsKICAgICAgICAgIGlmICh0aGlzLmZpbHRlcmVkU2lnbnNbY29sc1tpXV0uc2lnbnMubGVuZ3RoID09IGluZGV4ZXNbY29sc1tpXV0pIHsKICAgICAgICAgICAgY29scy5zcGxpY2UoaSwgMSk7CiAgICAgICAgICB9CiAgICAgICAgICAvL2NvbnNvbGUubG9nKCJDdXJyZW50IGxvY2F0aW9uOiBDb2wgIiArIGNvbHNbaV0gKyAiLCBpbmRleCAiICsgaW5kZXhlc1tjb2xzW2ldXSApOwogICAgICAgICAgLy9jb25zb2xlLmxvZygiQ29sdW1uIGxlbmd0aDogIiArIGNvbHMubGVuZ3RoKTsKICAgICAgICB9Ki8KICAgICAgY29uc29sZS5sb2coIlRoZSBpbmRleGVzIGFyZTogIiArIGluZGV4ZXMpOwogICAgICBjb25zb2xlLmxvZygiVGhlIGNvbHVtbnMgYXJlOiAiICsgY29scyk7CgogICAgICByZXR1cm4gc2lnbnM7CiAgICB9LAogIH0sCiAgbWV0aG9kczogewogICAgcmVzZXRSZXN1bHRzOiBmdW5jdGlvbiAoKSB7CiAgICAgIHRoaXMucmVxdWVzdGVkU2VhcmNoID0gZmFsc2U7CiAgICB9LAogICAgZmlsdGVyU2lnbnM6IGZ1bmN0aW9uICgpIHsKICAgICAgLy8gZGVidWdnZXI7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tZGVidWdnZXIKICAgICAgdGhpcy5yZXF1ZXN0ZWRTZWFyY2ggPSB0cnVlOwoKICAgICAgbGV0IHRocmVzaG9sZCA9IDEgLyAyOwogICAgICB0aGlzLmZpbHRlcmVkU2lnbnMgPSBbXTsKICAgICAgdGhpcy5zaWducy5mb3JFYWNoKChzaWduKSA9PiB7CiAgICAgICAgbGV0IHNlbCA9IHsKICAgICAgICAgIHN0YXJ0OiB0aGlzLnNlbGVjdGlvbi5zdGFydCAqIHRoaXMuZHVyYXRpb24sCiAgICAgICAgICBlbmQ6IHRoaXMuc2VsZWN0aW9uLmVuZCAqIHRoaXMuZHVyYXRpb24sCiAgICAgICAgfTsKICAgICAgICBpZiAoc2VsLnN0YXJ0IDw9IHNpZ24uZW5kICYmIHNlbC5lbmQgPj0gc2lnbi5zdGFydCkgewogICAgICAgICAgbGV0IG92ZXJsYXAgPQogICAgICAgICAgICAgIE1hdGgubWluKHNlbC5lbmQsIHNpZ24uZW5kKSAtIE1hdGgubWF4KHNlbC5zdGFydCwgc2lnbi5zdGFydCksCiAgICAgICAgICAgIHNpZ25EdXJhdGlvbiA9IHNpZ24uZW5kIC0gc2lnbi5zdGFydCwKICAgICAgICAgICAgcmF0aW8gPSBvdmVybGFwIC8gc2lnbkR1cmF0aW9uOwogICAgICAgICAgaWYgKHJhdGlvID49IHRocmVzaG9sZCkgewogICAgICAgICAgICB0aGlzLmZpbHRlcmVkU2lnbnMucHVzaChzaWduKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwoKICAgICAgdGhpcy5kdXJhdGlvbk9mU2VsZWN0aW9uU3RyaW5nID0gYCR7CiAgICAgICAgTWF0aC5yb3VuZCh0aGlzLnNlbGVjdGlvbi5zdGFydCAqIHRoaXMuZHVyYXRpb24gKiAxMCkgLyAxMAogICAgICB9IGFuZCAkewogICAgICAgIE1hdGgucm91bmQodGhpcy5zZWxlY3Rpb24uZW5kICogdGhpcy5kdXJhdGlvbiAqIDEwKSAvIDEwCiAgICAgIH0gc2Vjb25kc2A7CgogICAgICB0aGlzLnN0YWxlUmVzdWx0cyA9IGZhbHNlOwoKICAgICAgbGV0IHBhcmFtcyA9IHsKICAgICAgICBjdXJyZW50X3N0ZXA6IHRoaXMuY3VycmVudFN0ZXAsCiAgICAgICAgc3RhcnQ6IHRoaXMuc2VsZWN0aW9uLnN0YXJ0ICogdGhpcy5kdXJhdGlvbiwKICAgICAgICBlbmQ6IHRoaXMuc2VsZWN0aW9uLmVuZCAqIHRoaXMuZHVyYXRpb24sCiAgICAgICAgcmVzdWx0c19jb3VudDogdGhpcy5maWx0ZXJlZFNpZ25zLmxlbmd0aCwKICAgICAgICBzaWduczogdGhpcy5wcmVwYXJlZFJlc3VsdHMubWFwKChlbCkgPT4gewogICAgICAgICAgcmV0dXJuIGVsLnNpZ247CiAgICAgICAgfSksCiAgICAgIH07CiAgICAgIHRoaXMuJHNhdmVBY3Rpb24oInNlYXJjaCIsIHBhcmFtcyk7CiAgICB9LAogIH0sCiAgd2F0Y2g6IHsKICAgIHNlbGVjdGlvbjogZnVuY3Rpb24gKG5ld1ZhbCwgb2xkVmFsKSB7CiAgICAgIGlmIChuZXdWYWwuc3RhcnQgIT0gb2xkVmFsLnN0YXJ0IHx8IG5ld1ZhbC5lbmQgIT0gb2xkVmFsLmVuZCkgewogICAgICAgIHRoaXMuc3RhbGVSZXN1bHRzID0gdHJ1ZTsKICAgICAgfQogICAgfSwKICB9LAogIHByb3BzOiB7CiAgICBjdXJyZW50U3RlcDogeyB0eXBlOiBOdW1iZXIsIGRlZmF1bHQ6IC0xIH0sCiAgICBzaWduczogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogKCkgPT4gW10sCiAgICB9LAogICAgc2VsZWN0aW9uOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBzdGFydDogMCwKICAgICAgICAgIGVuZDogMSwKICAgICAgICB9OwogICAgICB9LAogICAgfSwKICAgIGR1cmF0aW9uOiB7IHR5cGU6IE51bWJlciwgZGVmYXVsdDogMCB9LAogIH0sCn07Cg=="},{"version":3,"sources":["Search.vue"],"names":[],"mappings":";AAgfile":"Search.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"search\">\n    <button @click=\"filterSigns()\">Search selection</button>\n    <div id=\"results\">\n      <template v-if=\"requestedSearch\">\n        <p id=\"results-header\">\n          Showing {{ preparedResults.length }} result{{\n            preparedResults.length != 1 ? \"s\" : \"\"\n          }}\n          between {{ durationOfSelectionString }}.\n          <br />\n          <span class=\"staleness\" v-if=\"staleResults\"\n            >Your selection has changed.\n            <a @click=\"filterSigns()\">Update</a> results?</span\n          >\n        </p>\n        <search-result\n          v-for=\"(sign, i) in preparedResults\"\n          :key=\"`filtered-sign-${i}`\"\n          :sign=\"sign.sign\"\n          :img-src=\"sign.img_src\"\n          :hands=\"'hands' in sign ? sign.hands : ''\"\n          :handshape=\"'handshape' in sign ? sign.handshape : ''\"\n          :location=\"'location' in sign ? sign.location : ''\"\n          :movement=\"'movement' in sign ? sign.movement : ''\"\n        />\n      </template>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SearchResult from \"./SearchResult.vue\";\n\nexport default {\n  name: \"Search\",\n  components: { SearchResult },\n  data() {\n    return {\n      durationOfSelectionString: \"\",\n      requestedSearch: false,\n      staleResults: true,\n      filteredSigns: [],\n    };\n  },\n  computed: {\n    preparedResults: function () {\n      let signs = [],\n        n = this.filteredSigns.length, // number of cols\n        indexes = new Array(n).fill(0), // internal pointer in each col\n        cols = [...Array(n).keys()]; // which cols are still available?\n      //console.log(\"The signs are: \" + JSON.stringify(this.filteredSigns));\n      //console.log(\"The signs (shortened) are: \" + JSON.stringify(this.filteredSigns.signs));\n      console.log(\n        \"The indexes are: \" +\n          this.signs +\n          \", Length: \" +\n          this.signs[0].signs.length\n      );\n      console.log(\"The columns are: \" + cols + \", Length: \" + cols.length);\n\n      let largestIndexLength = 0;\n      for (const i in indexes) {\n        if (this.signs[i].signs.length > largestIndexLength) {\n          largestIndexLength = this.signs[i].signs.length;\n          console.log(\"New Length! Now \" + largestIndexLength);\n        }\n      }\n      console.log(\"The largest index is \" + largestIndexLength);\n\n      /* while (cols.length > 0) {\n          cols.forEach((col,indexCol)=>{\n            results.push(this.filteredSigns[col].signs[0]);\n            this.filteredSigns[col].signs.splice(0,1);\n          })\n        }*/\n\n      for (\n        let indexNumber = 0;\n        indexNumber < largestIndexLength;\n        indexNumber++\n      ) {\n        // y\n        for (const indexColumn in cols) {\n          // x\n          if (\n            JSON.stringify(\n              this.filteredSigns[cols[indexColumn]].signs[indexNumber]\n            ) != undefined\n          ) {\n            console.log(\n              indexColumn +\n                \", \" +\n                indexNumber +\n                \"; \" +\n                JSON.stringify(\n                  this.filteredSigns[cols[indexColumn]].signs[indexNumber]\n                )\n            );\n            signs.push(\n              this.filteredSigns[cols[indexColumn]].signs[indexNumber]\n            );\n          }\n        }\n      }\n      /*while (signs.length < 50 && cols.length > 0) {\n          let i = parseInt(Math.random() * cols.length);\n          signs.push(this.filteredSigns[cols[i]].signs[indexes[cols[i]]]);\n          indexes[cols[i]]++;\n          if (this.filteredSigns[cols[i]].signs.length == indexes[cols[i]]) {\n            cols.splice(i, 1);\n          }\n          //console.log(\"Current location: Col \" + cols[i] + \", index \" + indexes[cols[i]] );\n          //console.log(\"Column length: \" + cols.length);\n        }*/\n      console.log(\"The indexes are: \" + indexes);\n      console.log(\"The columns are: \" + cols);\n\n      return signs;\n    },\n  },\n  methods: {\n    resetResults: function () {\n      this.requestedSearch = false;\n    },\n    filterSigns: function () {\n      // debugger; // eslint-disable-line no-debugger\n      this.requestedSearch = true;\n\n      let threshold = 1 / 2;\n      this.filteredSigns = [];\n      this.signs.forEach((sign) => {\n        let sel = {\n          start: this.selection.start * this.duration,\n          end: this.selection.end * this.duration,\n        };\n        if (sel.start <= sign.end && sel.end >= sign.start) {\n          let overlap =\n              Math.min(sel.end, sign.end) - Math.max(sel.start, sign.start),\n            signDuration = sign.end - sign.start,\n            ratio = overlap / signDuration;\n          if (ratio >= threshold) {\n            this.filteredSigns.push(sign);\n          }\n        }\n      });\n\n      this.durationOfSelectionString = `${\n        Math.round(this.selection.start * this.duration * 10) / 10\n      } and ${\n        Math.round(this.selection.end * this.duration * 10) / 10\n      } seconds`;\n\n      this.staleResults = false;\n\n      let params = {\n        current_step: this.currentStep,\n        start: this.selection.start * this.duration,\n        end: this.selection.end * this.duration,\n        results_count: this.filteredSigns.length,\n        signs: this.preparedResults.map((el) => {\n          return el.sign;\n        }),\n      };\n      this.$saveAction(\"search\", params);\n    },\n  },\n  watch: {\n    selection: function (newVal, oldVal) {\n      if (newVal.start != oldVal.start || newVal.end != oldVal.end) {\n        this.staleResults = true;\n      }\n    },\n  },\n  props: {\n    currentStep: { type: Number, default: -1 },\n    signs: {\n      type: Array,\n      default: () => [],\n    },\n    selection: {\n      type: Object,\n      default: function () {\n        return {\n          start: 0,\n          end: 1,\n        };\n      },\n    },\n    duration: { type: Number, default: 0 },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/assets/styles/_variables.scss\";\n@import \"@/assets/styles/_mixins.scss\";\n\nbutton {\n  border: none;\n  background-color: $accent;\n  font-weight: 600;\n  @include fs(0);\n  padding: 0.5rem 1rem;\n  width: 100%;\n  cursor: pointer;\n  user-select: none;\n  &:hover {\n    background-color: $accent;\n  }\n  &:active {\n    transform: translateY(1px);\n  }\n}\n\n#results {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  margin-top: 16px;\n  gap: 16px;\n}\n\n#results-header {\n  grid-column: 1 / -1;\n  position: sticky;\n  top: -16px;\n  width: 100%;\n  background-color: $transp-light-accent;\n  backdrop-filter: blur(8px);\n\n  padding: 0.5rem 0;\n  @include fs(-1);\n  font-weight: 440;\n  z-index: 1;\n}\n\n.staleness {\n  font-weight: 400;\n  @include fs(-1);\n  color: #444;\n  a {\n    text-decoration: underline;\n    cursor: pointer;\n  }\n}\n</style>\n"]}]}