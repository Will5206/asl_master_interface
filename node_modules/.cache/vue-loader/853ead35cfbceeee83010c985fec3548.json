{"remainingRequest":"/Users/will5206/Desktop/master_interface/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/will5206/Desktop/master_interface/src/components/Search.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/will5206/Desktop/master_interface/src/components/Search.vue","mtime":1704318946626},{"path":"/Users/will5206/Desktop/master_interface/node_modules/cache-loader/dist/cjs.js","mtime":1704319707089},{"path":"/Users/will5206/Desktop/master_interface/node_modules/babel-loader/lib/index.js","mtime":1704319707261},{"path":"/Users/will5206/Desktop/master_interface/node_modules/cache-loader/dist/cjs.js","mtime":1704319707089},{"path":"/Users/will5206/Desktop/master_interface/node_modules/vue-loader/lib/index.js","mtime":1704319707297}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgaW1wb3J0IFNlYXJjaFJlc3VsdCBmcm9tICcuL1NlYXJjaFJlc3VsdC52dWUnOwogIAogIGV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdTZWFyY2gnLAogICAgY29tcG9uZW50czogeyBTZWFyY2hSZXN1bHQgfSwKICAgIGRhdGEoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgZHVyYXRpb25PZlNlbGVjdGlvblN0cmluZzogJycsCiAgICAgICAgcmVxdWVzdGVkU2VhcmNoOiBmYWxzZSwKICAgICAgICBzdGFsZVJlc3VsdHM6IHRydWUsCiAgICAgICAgZmlsdGVyZWRTaWduczogW10sCiAgICAgIH07CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgcHJlcGFyZWRSZXN1bHRzOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgbGV0IHNpZ25zID0gW10sCiAgICAgICAgICBuID0gdGhpcy5maWx0ZXJlZFNpZ25zLmxlbmd0aCwgLy8gbnVtYmVyIG9mIGNvbHMKICAgICAgICAgIGluZGV4ZXMgPSBuZXcgQXJyYXkobikuZmlsbCgwKSwgLy8gaW50ZXJuYWwgcG9pbnRlciBpbiBlYWNoIGNvbAogICAgICAgICAgY29scyA9IFsuLi5BcnJheShuKS5rZXlzKCldOyAvLyB3aGljaCBjb2xzIGFyZSBzdGlsbCBhdmFpbGFibGU/CiAgICAgICAgLy9jb25zb2xlLmxvZygiVGhlIHNpZ25zIGFyZTogIiArIEpTT04uc3RyaW5naWZ5KHRoaXMuZmlsdGVyZWRTaWducykpOwogICAgICAgIC8vY29uc29sZS5sb2coIlRoZSBzaWducyAoc2hvcnRlbmVkKSBhcmU6ICIgKyBKU09OLnN0cmluZ2lmeSh0aGlzLmZpbHRlcmVkU2lnbnMuc2lnbnMpKTsKICAgICAgICBjb25zb2xlLmxvZygiVGhlIGluZGV4ZXMgYXJlOiAiICsgdGhpcy5zaWducyArICIsIExlbmd0aDogIiArIHRoaXMuc2lnbnNbMF0uc2lnbnMubGVuZ3RoKTsKICAgICAgICBjb25zb2xlLmxvZygiVGhlIGNvbHVtbnMgYXJlOiAiICsgY29scyArICIsIExlbmd0aDogIiArIGNvbHMubGVuZ3RoKTsKICAKICAgICAgICBsZXQgbGFyZ2VzdEluZGV4TGVuZ3RoID0gMDsKICAgICAgICBmb3IgKGNvbnN0IGkgaW4gaW5kZXhlcykgeyAKICAgICAgICAgIGlmICh0aGlzLnNpZ25zW2ldLnNpZ25zLmxlbmd0aCA+IGxhcmdlc3RJbmRleExlbmd0aCl7CiAgICAgICAgICAgIGxhcmdlc3RJbmRleExlbmd0aCA9IHRoaXMuc2lnbnNbaV0uc2lnbnMubGVuZ3RoOwogICAgICAgICAgICBjb25zb2xlLmxvZygiTmV3IExlbmd0aCEgTm93ICIgKyBsYXJnZXN0SW5kZXhMZW5ndGgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBjb25zb2xlLmxvZygiVGhlIGxhcmdlc3QgaW5kZXggaXMgIiArIGxhcmdlc3RJbmRleExlbmd0aCk7CiAgCiAgICAgICAvKiB3aGlsZSAoY29scy5sZW5ndGggPiAwKSB7CiAgICAgICAgICBjb2xzLmZvckVhY2goKGNvbCxpbmRleENvbCk9PnsKICAgICAgICAgICAgcmVzdWx0cy5wdXNoKHRoaXMuZmlsdGVyZWRTaWduc1tjb2xdLnNpZ25zWzBdKTsKICAgICAgICAgICAgdGhpcy5maWx0ZXJlZFNpZ25zW2NvbF0uc2lnbnMuc3BsaWNlKDAsMSk7CiAgICAgICAgICB9KQogICAgICAgIH0qLwogICAgICAgIAogICAgICAgIGZvciAobGV0IGluZGV4TnVtYmVyID0gMDsgaW5kZXhOdW1iZXIgPCBsYXJnZXN0SW5kZXhMZW5ndGg7IGluZGV4TnVtYmVyKyspIHsgLy8geQogICAgICAgICAgZm9yIChjb25zdCBpbmRleENvbHVtbiBpbiBjb2xzKSB7IC8vIHgKICAgICAgICAgICAgaWYgKEpTT04uc3RyaW5naWZ5KHRoaXMuZmlsdGVyZWRTaWduc1tjb2xzW2luZGV4Q29sdW1uXV0uc2lnbnNbaW5kZXhOdW1iZXJdKSAhPSB1bmRlZmluZWQgKXsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhpbmRleENvbHVtbiArICIsICIgKyBpbmRleE51bWJlciArICI7ICIgCiAgICAgICAgICAgICAgKyBKU09OLnN0cmluZ2lmeSh0aGlzLmZpbHRlcmVkU2lnbnNbY29sc1tpbmRleENvbHVtbl1dLnNpZ25zW2luZGV4TnVtYmVyXSkpOwogICAgICAgICAgICAgIHNpZ25zLnB1c2godGhpcy5maWx0ZXJlZFNpZ25zW2NvbHNbaW5kZXhDb2x1bW5dXS5zaWduc1tpbmRleE51bWJlcl0pOwogICAgICAgICAgICB9CiAgCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIC8qd2hpbGUgKHNpZ25zLmxlbmd0aCA8IDUwICYmIGNvbHMubGVuZ3RoID4gMCkgewogICAgICAgICAgbGV0IGkgPSBwYXJzZUludChNYXRoLnJhbmRvbSgpICogY29scy5sZW5ndGgpOwogICAgICAgICAgc2lnbnMucHVzaCh0aGlzLmZpbHRlcmVkU2lnbnNbY29sc1tpXV0uc2lnbnNbaW5kZXhlc1tjb2xzW2ldXV0pOwogICAgICAgICAgaW5kZXhlc1tjb2xzW2ldXSsrOwogICAgICAgICAgaWYgKHRoaXMuZmlsdGVyZWRTaWduc1tjb2xzW2ldXS5zaWducy5sZW5ndGggPT0gaW5kZXhlc1tjb2xzW2ldXSkgewogICAgICAgICAgICBjb2xzLnNwbGljZShpLCAxKTsKICAgICAgICAgIH0KICAgICAgICAgIC8vY29uc29sZS5sb2coIkN1cnJlbnQgbG9jYXRpb246IENvbCAiICsgY29sc1tpXSArICIsIGluZGV4ICIgKyBpbmRleGVzW2NvbHNbaV1dICk7CiAgICAgICAgICAvL2NvbnNvbGUubG9nKCJDb2x1bW4gbGVuZ3RoOiAiICsgY29scy5sZW5ndGgpOwogICAgICAgIH0qLwogICAgICAgIGNvbnNvbGUubG9nKCJUaGUgaW5kZXhlcyBhcmU6ICIgKyBpbmRleGVzKTsKICAgICAgICBjb25zb2xlLmxvZygiVGhlIGNvbHVtbnMgYXJlOiAiICsgY29scyk7CiAgCiAgICAgICAgcmV0dXJuIHNpZ25zOwogICAgICB9LAogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgcmVzZXRSZXN1bHRzOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgdGhpcy5yZXF1ZXN0ZWRTZWFyY2ggPSBmYWxzZTsKICAgICAgfSwKICAgICAgZmlsdGVyU2lnbnM6IGZ1bmN0aW9uICgpIHsKICAgICAgICAvLyBkZWJ1Z2dlcjsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1kZWJ1Z2dlcgogICAgICAgIHRoaXMucmVxdWVzdGVkU2VhcmNoID0gdHJ1ZTsKICAKICAgICAgICBsZXQgdGhyZXNob2xkID0gMSAvIDI7CiAgICAgICAgdGhpcy5maWx0ZXJlZFNpZ25zID0gW107CiAgICAgICAgdGhpcy5zaWducy5mb3JFYWNoKChzaWduKSA9PiB7CiAgICAgICAgICBsZXQgc2VsID0gewogICAgICAgICAgICBzdGFydDogdGhpcy5zZWxlY3Rpb24uc3RhcnQgKiB0aGlzLmR1cmF0aW9uLAogICAgICAgICAgICBlbmQ6IHRoaXMuc2VsZWN0aW9uLmVuZCAqIHRoaXMuZHVyYXRpb24sCiAgICAgICAgICB9OwogICAgICAgICAgaWYgKHNlbC5zdGFydCA8PSBzaWduLmVuZCAmJiBzZWwuZW5kID49IHNpZ24uc3RhcnQpIHsKICAgICAgICAgICAgbGV0IG92ZXJsYXAgPQogICAgICAgICAgICAgICAgTWF0aC5taW4oc2VsLmVuZCwgc2lnbi5lbmQpIC0gTWF0aC5tYXgoc2VsLnN0YXJ0LCBzaWduLnN0YXJ0KSwKICAgICAgICAgICAgICBzaWduRHVyYXRpb24gPSBzaWduLmVuZCAtIHNpZ24uc3RhcnQsCiAgICAgICAgICAgICAgcmF0aW8gPSBvdmVybGFwIC8gc2lnbkR1cmF0aW9uOwogICAgICAgICAgICBpZiAocmF0aW8gPj0gdGhyZXNob2xkKSB7CiAgICAgICAgICAgICAgdGhpcy5maWx0ZXJlZFNpZ25zLnB1c2goc2lnbik7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9KTsKICAKICAgICAgICB0aGlzLmR1cmF0aW9uT2ZTZWxlY3Rpb25TdHJpbmcgPSBgJHsKICAgICAgICAgIE1hdGgucm91bmQodGhpcy5zZWxlY3Rpb24uc3RhcnQgKiB0aGlzLmR1cmF0aW9uICogMTApIC8gMTAKICAgICAgICB9IGFuZCAkewogICAgICAgICAgTWF0aC5yb3VuZCh0aGlzLnNlbGVjdGlvbi5lbmQgKiB0aGlzLmR1cmF0aW9uICogMTApIC8gMTAKICAgICAgICB9IHNlY29uZHNgOwogIAogICAgICAgIHRoaXMuc3RhbGVSZXN1bHRzID0gZmFsc2U7CiAgCiAgICAgICAgbGV0IHBhcmFtcyA9IHsKICAgICAgICAgIGN1cnJlbnRfc3RlcDogdGhpcy5jdXJyZW50U3RlcCwKICAgICAgICAgIHN0YXJ0OiB0aGlzLnNlbGVjdGlvbi5zdGFydCAqIHRoaXMuZHVyYXRpb24sCiAgICAgICAgICBlbmQ6IHRoaXMuc2VsZWN0aW9uLmVuZCAqIHRoaXMuZHVyYXRpb24sCiAgICAgICAgICByZXN1bHRzX2NvdW50OiB0aGlzLmZpbHRlcmVkU2lnbnMubGVuZ3RoLAogICAgICAgICAgc2lnbnM6IHRoaXMucHJlcGFyZWRSZXN1bHRzLm1hcCgoZWwpID0+IHsKICAgICAgICAgICAgcmV0dXJuIGVsLnNpZ247CiAgICAgICAgICB9KSwKICAgICAgICB9OwogICAgICAgIHRoaXMuJHNhdmVBY3Rpb24oJ3NlYXJjaCcsIHBhcmFtcyk7CiAgICAgIH0sCiAgICB9LAogICAgd2F0Y2g6IHsKICAgICAgc2VsZWN0aW9uOiBmdW5jdGlvbiAobmV3VmFsLCBvbGRWYWwpIHsKICAgICAgICBpZiAobmV3VmFsLnN0YXJ0ICE9IG9sZFZhbC5zdGFydCB8fCBuZXdWYWwuZW5kICE9IG9sZFZhbC5lbmQpIHsKICAgICAgICAgIHRoaXMuc3RhbGVSZXN1bHRzID0gdHJ1ZTsKICAgICAgICB9CiAgICAgIH0sCiAgICB9LAogICAgcHJvcHM6IHsKICAgICAgY3VycmVudFN0ZXA6IHsgdHlwZTogTnVtYmVyLCBkZWZhdWx0OiAtMSB9LAogICAgICBzaWduczogewogICAgICAgIHR5cGU6IEFycmF5LAogICAgICAgIGRlZmF1bHQ6ICgpID0+IFtdLAogICAgICB9LAogICAgICBzZWxlY3Rpb246IHsKICAgICAgICB0eXBlOiBPYmplY3QsCiAgICAgICAgZGVmYXVsdDogZnVuY3Rpb24gKCkgewogICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgc3RhcnQ6IDAsCiAgICAgICAgICAgIGVuZDogMSwKICAgICAgICAgIH07CiAgICAgICAgfSwKICAgICAgfSwKICAgICAgZHVyYXRpb246IHsgdHlwZTogTnVtYmVyLCBkZWZhdWx0OiAwIH0sCiAgICB9LAogIH07CiAg"},{"version":3,"sources":["Search.vue"],"names":[],"mappings":";AAgfile":"Search.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"search\">\n      <button @click=\"filterSigns()\">Search selection</button>\n      <div id=\"results\">\n        <template v-if=\"requestedSearch\">\n          <p id=\"results-header\">\n            Showing {{ preparedResults.length }} result{{\n              preparedResults.length != 1 ? 's' : ''\n            }}\n            between {{ durationOfSelectionString }}.\n            <br />\n            <span class=\"staleness\" v-if=\"staleResults\"\n              >Your selection has changed.\n              <a @click=\"filterSigns()\">Update</a> results?</span\n            >\n          </p>\n          <search-result\n            v-for=\"(sign, i) in preparedResults\"\n            :key=\"`filtered-sign-${i}`\"\n            :sign=\"sign.sign\"\n            :img-src=\"sign.img_src\"\n            :hands=\"'hands' in sign ? sign.hands : ''\"\n            :handshape=\"'handshape' in sign ? sign.handshape : ''\"\n            :location=\"'location' in sign ? sign.location : ''\"\n            :movement=\"'movement' in sign ? sign.movement : ''\"\n          />\n        </template>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import SearchResult from './SearchResult.vue';\n  \n  export default {\n    name: 'Search',\n    components: { SearchResult },\n    data() {\n      return {\n        durationOfSelectionString: '',\n        requestedSearch: false,\n        staleResults: true,\n        filteredSigns: [],\n      };\n    },\n    computed: {\n      preparedResults: function () {\n        let signs = [],\n          n = this.filteredSigns.length, // number of cols\n          indexes = new Array(n).fill(0), // internal pointer in each col\n          cols = [...Array(n).keys()]; // which cols are still available?\n        //console.log(\"The signs are: \" + JSON.stringify(this.filteredSigns));\n        //console.log(\"The signs (shortened) are: \" + JSON.stringify(this.filteredSigns.signs));\n        console.log(\"The indexes are: \" + this.signs + \", Length: \" + this.signs[0].signs.length);\n        console.log(\"The columns are: \" + cols + \", Length: \" + cols.length);\n  \n        let largestIndexLength = 0;\n        for (const i in indexes) { \n          if (this.signs[i].signs.length > largestIndexLength){\n            largestIndexLength = this.signs[i].signs.length;\n            console.log(\"New Length! Now \" + largestIndexLength);\n          }\n        }\n        console.log(\"The largest index is \" + largestIndexLength);\n  \n       /* while (cols.length > 0) {\n          cols.forEach((col,indexCol)=>{\n            results.push(this.filteredSigns[col].signs[0]);\n            this.filteredSigns[col].signs.splice(0,1);\n          })\n        }*/\n        \n        for (let indexNumber = 0; indexNumber < largestIndexLength; indexNumber++) { // y\n          for (const indexColumn in cols) { // x\n            if (JSON.stringify(this.filteredSigns[cols[indexColumn]].signs[indexNumber]) != undefined ){\n              console.log(indexColumn + \", \" + indexNumber + \"; \" \n              + JSON.stringify(this.filteredSigns[cols[indexColumn]].signs[indexNumber]));\n              signs.push(this.filteredSigns[cols[indexColumn]].signs[indexNumber]);\n            }\n  \n          }\n        }\n        /*while (signs.length < 50 && cols.length > 0) {\n          let i = parseInt(Math.random() * cols.length);\n          signs.push(this.filteredSigns[cols[i]].signs[indexes[cols[i]]]);\n          indexes[cols[i]]++;\n          if (this.filteredSigns[cols[i]].signs.length == indexes[cols[i]]) {\n            cols.splice(i, 1);\n          }\n          //console.log(\"Current location: Col \" + cols[i] + \", index \" + indexes[cols[i]] );\n          //console.log(\"Column length: \" + cols.length);\n        }*/\n        console.log(\"The indexes are: \" + indexes);\n        console.log(\"The columns are: \" + cols);\n  \n        return signs;\n      },\n    },\n    methods: {\n      resetResults: function () {\n        this.requestedSearch = false;\n      },\n      filterSigns: function () {\n        // debugger; // eslint-disable-line no-debugger\n        this.requestedSearch = true;\n  \n        let threshold = 1 / 2;\n        this.filteredSigns = [];\n        this.signs.forEach((sign) => {\n          let sel = {\n            start: this.selection.start * this.duration,\n            end: this.selection.end * this.duration,\n          };\n          if (sel.start <= sign.end && sel.end >= sign.start) {\n            let overlap =\n                Math.min(sel.end, sign.end) - Math.max(sel.start, sign.start),\n              signDuration = sign.end - sign.start,\n              ratio = overlap / signDuration;\n            if (ratio >= threshold) {\n              this.filteredSigns.push(sign);\n            }\n          }\n        });\n  \n        this.durationOfSelectionString = `${\n          Math.round(this.selection.start * this.duration * 10) / 10\n        } and ${\n          Math.round(this.selection.end * this.duration * 10) / 10\n        } seconds`;\n  \n        this.staleResults = false;\n  \n        let params = {\n          current_step: this.currentStep,\n          start: this.selection.start * this.duration,\n          end: this.selection.end * this.duration,\n          results_count: this.filteredSigns.length,\n          signs: this.preparedResults.map((el) => {\n            return el.sign;\n          }),\n        };\n        this.$saveAction('search', params);\n      },\n    },\n    watch: {\n      selection: function (newVal, oldVal) {\n        if (newVal.start != oldVal.start || newVal.end != oldVal.end) {\n          this.staleResults = true;\n        }\n      },\n    },\n    props: {\n      currentStep: { type: Number, default: -1 },\n      signs: {\n        type: Array,\n        default: () => [],\n      },\n      selection: {\n        type: Object,\n        default: function () {\n          return {\n            start: 0,\n            end: 1,\n          };\n        },\n      },\n      duration: { type: Number, default: 0 },\n    },\n  };\n  </script>\n  \n  <style lang=\"scss\" scoped>\n  @import '@/assets/styles/_variables.scss';\n  @import '@/assets/styles/_mixins.scss';\n  \n  button {\n    border: none;\n    background-color: $accent;\n    font-weight: 600;\n    @include fs(0);\n    padding: 0.5rem 1rem;\n    width: 100%;\n    cursor: pointer;\n    user-select: none;\n    &:hover {\n      background-color: $accent;\n    }\n    &:active {\n      transform: translateY(1px);\n    }\n  }\n  \n  #results {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    margin-top: 16px;\n    gap: 16px;\n  }\n  \n  #results-header {\n    grid-column: 1 / -1;\n    position: sticky;\n    top: -16px;\n    width: 100%;\n    background-color: $transp-light-accent;\n    backdrop-filter: blur(8px);\n  \n    padding: 0.5rem 0;\n    @include fs(-1);\n    font-weight: 440;\n    z-index: 1;\n  }\n  \n  .staleness {\n    font-weight: 400;\n    @include fs(-1);\n    color: #444;\n    a {\n      text-decoration: underline;\n      cursor: pointer;\n    }\n  }\n  </style>"]}]}