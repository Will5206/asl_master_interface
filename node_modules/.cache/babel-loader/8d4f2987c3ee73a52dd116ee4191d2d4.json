{"remainingRequest":"/Users/will5206/Desktop/master_interface/node_modules/thread-loader/dist/cjs.js!/Users/will5206/Desktop/master_interface/node_modules/babel-loader/lib/index.js!/Users/will5206/Desktop/master_interface/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/will5206/Desktop/master_interface/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/will5206/Desktop/master_interface/src/components/Search.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/will5206/Desktop/master_interface/src/components/Search.vue","mtime":1705646185481},{"path":"/Users/will5206/Desktop/master_interface/node_modules/cache-loader/dist/cjs.js","mtime":1704319707089},{"path":"/Users/will5206/Desktop/master_interface/node_modules/thread-loader/dist/cjs.js","mtime":1704319707089},{"path":"/Users/will5206/Desktop/master_interface/node_modules/babel-loader/lib/index.js","mtime":1704319707261},{"path":"/Users/will5206/Desktop/master_interface/node_modules/cache-loader/dist/cjs.js","mtime":1704319707089},{"path":"/Users/will5206/Desktop/master_interface/node_modules/vue-loader/lib/index.js","mtime":1704319707297}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFNlYXJjaFJlc3VsdCBmcm9tICIuL1NlYXJjaFJlc3VsdC52dWUiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlNlYXJjaCIsCiAgY29tcG9uZW50czogewogICAgU2VhcmNoUmVzdWx0CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZHVyYXRpb25PZlNlbGVjdGlvblN0cmluZzogIiIsCiAgICAgIHJlcXVlc3RlZFNlYXJjaDogZmFsc2UsCiAgICAgIHN0YWxlUmVzdWx0czogdHJ1ZSwKICAgICAgZmlsdGVyZWRTaWduczogW10KICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgcHJlcGFyZWRSZXN1bHRzOiBmdW5jdGlvbiAoKSB7CiAgICAgIGxldCBzaWducyA9IFtdLAogICAgICAgIG4gPSB0aGlzLmZpbHRlcmVkU2lnbnMubGVuZ3RoLAogICAgICAgIC8vIG51bWJlciBvZiBjb2xzCiAgICAgICAgaW5kZXhlcyA9IG5ldyBBcnJheShuKS5maWxsKDApLAogICAgICAgIC8vIGludGVybmFsIHBvaW50ZXIgaW4gZWFjaCBjb2wKICAgICAgICBjb2xzID0gWy4uLkFycmF5KG4pLmtleXMoKV07IC8vIHdoaWNoIGNvbHMgYXJlIHN0aWxsIGF2YWlsYWJsZT8KICAgICAgLy9jb25zb2xlLmxvZygiVGhlIHNpZ25zIGFyZTogIiArIEpTT04uc3RyaW5naWZ5KHRoaXMuZmlsdGVyZWRTaWducykpOwogICAgICAvL2NvbnNvbGUubG9nKCJUaGUgc2lnbnMgKHNob3J0ZW5lZCkgYXJlOiAiICsgSlNPTi5zdHJpbmdpZnkodGhpcy5maWx0ZXJlZFNpZ25zLnNpZ25zKSk7CiAgICAgIGNvbnNvbGUubG9nKCJUaGUgaW5kZXhlcyBhcmU6ICIgKyB0aGlzLnNpZ25zICsgIiwgTGVuZ3RoOiAiICsgdGhpcy5zaWduc1swXS5zaWducy5sZW5ndGgpOwogICAgICBjb25zb2xlLmxvZygiVGhlIGNvbHVtbnMgYXJlOiAiICsgY29scyArICIsIExlbmd0aDogIiArIGNvbHMubGVuZ3RoKTsKICAgICAgbGV0IGxhcmdlc3RJbmRleExlbmd0aCA9IDA7CiAgICAgIGZvciAoY29uc3QgaSBpbiBpbmRleGVzKSB7CiAgICAgICAgaWYgKHRoaXMuc2lnbnNbaV0uc2lnbnMubGVuZ3RoID4gbGFyZ2VzdEluZGV4TGVuZ3RoKSB7CiAgICAgICAgICBsYXJnZXN0SW5kZXhMZW5ndGggPSB0aGlzLnNpZ25zW2ldLnNpZ25zLmxlbmd0aDsKICAgICAgICAgIGNvbnNvbGUubG9nKCJOZXcgTGVuZ3RoISBOb3cgIiArIGxhcmdlc3RJbmRleExlbmd0aCk7CiAgICAgICAgfQogICAgICB9CiAgICAgIGNvbnNvbGUubG9nKCJUaGUgbGFyZ2VzdCBpbmRleCBpcyAiICsgbGFyZ2VzdEluZGV4TGVuZ3RoKTsKCiAgICAgIC8qIHdoaWxlIChjb2xzLmxlbmd0aCA+IDApIHsKICAgICAgICAgIGNvbHMuZm9yRWFjaCgoY29sLGluZGV4Q29sKT0+ewogICAgICAgICAgICByZXN1bHRzLnB1c2godGhpcy5maWx0ZXJlZFNpZ25zW2NvbF0uc2lnbnNbMF0pOwogICAgICAgICAgICB0aGlzLmZpbHRlcmVkU2lnbnNbY29sXS5zaWducy5zcGxpY2UoMCwxKTsKICAgICAgICAgIH0pCiAgICAgICAgfSovCgogICAgICBmb3IgKGxldCBpbmRleE51bWJlciA9IDA7IGluZGV4TnVtYmVyIDwgbGFyZ2VzdEluZGV4TGVuZ3RoOyBpbmRleE51bWJlcisrKSB7CiAgICAgICAgLy8geQogICAgICAgIGZvciAoY29uc3QgaW5kZXhDb2x1bW4gaW4gY29scykgewogICAgICAgICAgLy8geAogICAgICAgICAgaWYgKEpTT04uc3RyaW5naWZ5KHRoaXMuZmlsdGVyZWRTaWduc1tjb2xzW2luZGV4Q29sdW1uXV0uc2lnbnNbaW5kZXhOdW1iZXJdKSAhPSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coaW5kZXhDb2x1bW4gKyAiLCAiICsgaW5kZXhOdW1iZXIgKyAiOyAiICsgSlNPTi5zdHJpbmdpZnkodGhpcy5maWx0ZXJlZFNpZ25zW2NvbHNbaW5kZXhDb2x1bW5dXS5zaWduc1tpbmRleE51bWJlcl0pKTsKICAgICAgICAgICAgc2lnbnMucHVzaCh0aGlzLmZpbHRlcmVkU2lnbnNbY29sc1tpbmRleENvbHVtbl1dLnNpZ25zW2luZGV4TnVtYmVyXSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICAgIC8qd2hpbGUgKHNpZ25zLmxlbmd0aCA8IDUwICYmIGNvbHMubGVuZ3RoID4gMCkgewogICAgICAgICAgbGV0IGkgPSBwYXJzZUludChNYXRoLnJhbmRvbSgpICogY29scy5sZW5ndGgpOwogICAgICAgICAgc2lnbnMucHVzaCh0aGlzLmZpbHRlcmVkU2lnbnNbY29sc1tpXV0uc2lnbnNbaW5kZXhlc1tjb2xzW2ldXV0pOwogICAgICAgICAgaW5kZXhlc1tjb2xzW2ldXSsrOwogICAgICAgICAgaWYgKHRoaXMuZmlsdGVyZWRTaWduc1tjb2xzW2ldXS5zaWducy5sZW5ndGggPT0gaW5kZXhlc1tjb2xzW2ldXSkgewogICAgICAgICAgICBjb2xzLnNwbGljZShpLCAxKTsKICAgICAgICAgIH0KICAgICAgICAgIC8vY29uc29sZS5sb2coIkN1cnJlbnQgbG9jYXRpb246IENvbCAiICsgY29sc1tpXSArICIsIGluZGV4ICIgKyBpbmRleGVzW2NvbHNbaV1dICk7CiAgICAgICAgICAvL2NvbnNvbGUubG9nKCJDb2x1bW4gbGVuZ3RoOiAiICsgY29scy5sZW5ndGgpOwogICAgICAgIH0qLwogICAgICBjb25zb2xlLmxvZygiVGhlIGluZGV4ZXMgYXJlOiAiICsgaW5kZXhlcyk7CiAgICAgIGNvbnNvbGUubG9nKCJUaGUgY29sdW1ucyBhcmU6ICIgKyBjb2xzKTsKICAgICAgcmV0dXJuIHNpZ25zOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgcmVzZXRSZXN1bHRzOiBmdW5jdGlvbiAoKSB7CiAgICAgIHRoaXMucmVxdWVzdGVkU2VhcmNoID0gZmFsc2U7CiAgICB9LAogICAgZmlsdGVyU2lnbnM6IGZ1bmN0aW9uICgpIHsKICAgICAgLy8gZGVidWdnZXI7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tZGVidWdnZXIKICAgICAgdGhpcy5yZXF1ZXN0ZWRTZWFyY2ggPSB0cnVlOwogICAgICBsZXQgdGhyZXNob2xkID0gMSAvIDI7CiAgICAgIHRoaXMuZmlsdGVyZWRTaWducyA9IFtdOwogICAgICB0aGlzLnNpZ25zLmZvckVhY2goc2lnbiA9PiB7CiAgICAgICAgbGV0IHNlbCA9IHsKICAgICAgICAgIHN0YXJ0OiB0aGlzLnNlbGVjdGlvbi5zdGFydCAqIHRoaXMuZHVyYXRpb24sCiAgICAgICAgICBlbmQ6IHRoaXMuc2VsZWN0aW9uLmVuZCAqIHRoaXMuZHVyYXRpb24KICAgICAgICB9OwogICAgICAgIGlmIChzZWwuc3RhcnQgPD0gc2lnbi5lbmQgJiYgc2VsLmVuZCA+PSBzaWduLnN0YXJ0KSB7CiAgICAgICAgICBsZXQgb3ZlcmxhcCA9IE1hdGgubWluKHNlbC5lbmQsIHNpZ24uZW5kKSAtIE1hdGgubWF4KHNlbC5zdGFydCwgc2lnbi5zdGFydCksCiAgICAgICAgICAgIHNpZ25EdXJhdGlvbiA9IHNpZ24uZW5kIC0gc2lnbi5zdGFydCwKICAgICAgICAgICAgcmF0aW8gPSBvdmVybGFwIC8gc2lnbkR1cmF0aW9uOwogICAgICAgICAgaWYgKHJhdGlvID49IHRocmVzaG9sZCkgewogICAgICAgICAgICB0aGlzLmZpbHRlcmVkU2lnbnMucHVzaChzaWduKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgICB0aGlzLmR1cmF0aW9uT2ZTZWxlY3Rpb25TdHJpbmcgPSBgJHtNYXRoLnJvdW5kKHRoaXMuc2VsZWN0aW9uLnN0YXJ0ICogdGhpcy5kdXJhdGlvbiAqIDEwKSAvIDEwfSBhbmQgJHtNYXRoLnJvdW5kKHRoaXMuc2VsZWN0aW9uLmVuZCAqIHRoaXMuZHVyYXRpb24gKiAxMCkgLyAxMH0gc2Vjb25kc2A7CiAgICAgIHRoaXMuc3RhbGVSZXN1bHRzID0gZmFsc2U7CiAgICAgIGxldCBwYXJhbXMgPSB7CiAgICAgICAgY3VycmVudF9zdGVwOiB0aGlzLmN1cnJlbnRTdGVwLAogICAgICAgIHN0YXJ0OiB0aGlzLnNlbGVjdGlvbi5zdGFydCAqIHRoaXMuZHVyYXRpb24sCiAgICAgICAgZW5kOiB0aGlzLnNlbGVjdGlvbi5lbmQgKiB0aGlzLmR1cmF0aW9uLAogICAgICAgIHJlc3VsdHNfY291bnQ6IHRoaXMuZmlsdGVyZWRTaWducy5sZW5ndGgsCiAgICAgICAgc2lnbnM6IHRoaXMucHJlcGFyZWRSZXN1bHRzLm1hcChlbCA9PiB7CiAgICAgICAgICByZXR1cm4gZWwuc2lnbjsKICAgICAgICB9KQogICAgICB9OwogICAgICB0aGlzLiRzYXZlQWN0aW9uKCJzZWFyY2giLCBwYXJhbXMpOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIHNlbGVjdGlvbjogZnVuY3Rpb24gKG5ld1ZhbCwgb2xkVmFsKSB7CiAgICAgIGlmIChuZXdWYWwuc3RhcnQgIT0gb2xkVmFsLnN0YXJ0IHx8IG5ld1ZhbC5lbmQgIT0gb2xkVmFsLmVuZCkgewogICAgICAgIHRoaXMuc3RhbGVSZXN1bHRzID0gdHJ1ZTsKICAgICAgfQogICAgfQogIH0sCiAgcHJvcHM6IHsKICAgIGN1cnJlbnRTdGVwOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogLTEKICAgIH0sCiAgICBzaWduczogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogKCkgPT4gW10KICAgIH0sCiAgICBzZWxlY3Rpb246IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHN0YXJ0OiAwLAogICAgICAgICAgZW5kOiAxCiAgICAgICAgfTsKICAgICAgfQogICAgfSwKICAgIGR1cmF0aW9uOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMAogICAgfQogIH0KfTs="},{"version":3,"names":["SearchResult","name","components","data","durationOfSelectionString","requestedSearch","staleResults","filteredSigns","computed","preparedResults","signs","n","length","indexes","Array","fill","cols","keys","console","log","largestIndexLength","i","indexNumber","indexColumn","JSON","stringify","undefined","push","methods","resetResults","filterSigns","threshold","forEach","sign","sel","start","selection","duration","end","overlap","Math","min","max","signDuration","ratio","round","params","current_step","currentStep","results_count","map","el","$saveAction","watch","newVal","oldVal","props","type","Number","default","Object"],"sources":["src/components/Search.vue"],"sourcesContent":["<template>\n  <div id=\"search\">\n    <button @click=\"filterSigns()\">Search selection</button>\n    <div id=\"results\">\n      <template v-if=\"requestedSearch\">\n        <p id=\"results-header\">\n          Showing {{ preparedResults.length }} result{{\n            preparedResults.length != 1 ? \"s\" : \"\"\n          }}\n          between {{ durationOfSelectionString }}.\n          <br />\n          <span class=\"staleness\" v-if=\"staleResults\"\n            >Your selection has changed.\n            <a @click=\"filterSigns()\">Update</a> results?</span\n          >\n        </p>\n        <search-result\n          v-for=\"(sign, i) in preparedResults\"\n          :key=\"`filtered-sign-${i}`\"\n          :sign=\"sign.sign\"\n          :img-src=\"sign.img_src\"\n          :hands=\"'hands' in sign ? sign.hands : ''\"\n          :handshape=\"'handshape' in sign ? sign.handshape : ''\"\n          :location=\"'location' in sign ? sign.location : ''\"\n          :movement=\"'movement' in sign ? sign.movement : ''\"\n        />\n      </template>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SearchResult from \"./SearchResult.vue\";\n\nexport default {\n  name: \"Search\",\n  components: { SearchResult },\n  data() {\n    return {\n      durationOfSelectionString: \"\",\n      requestedSearch: false,\n      staleResults: true,\n      filteredSigns: [],\n    };\n  },\n  computed: {\n    preparedResults: function () {\n      let signs = [],\n        n = this.filteredSigns.length, // number of cols\n        indexes = new Array(n).fill(0), // internal pointer in each col\n        cols = [...Array(n).keys()]; // which cols are still available?\n      //console.log(\"The signs are: \" + JSON.stringify(this.filteredSigns));\n      //console.log(\"The signs (shortened) are: \" + JSON.stringify(this.filteredSigns.signs));\n      console.log(\n        \"The indexes are: \" +\n          this.signs +\n          \", Length: \" +\n          this.signs[0].signs.length\n      );\n      console.log(\"The columns are: \" + cols + \", Length: \" + cols.length);\n\n      let largestIndexLength = 0;\n      for (const i in indexes) {\n        if (this.signs[i].signs.length > largestIndexLength) {\n          largestIndexLength = this.signs[i].signs.length;\n          console.log(\"New Length! Now \" + largestIndexLength);\n        }\n      }\n      console.log(\"The largest index is \" + largestIndexLength);\n\n      /* while (cols.length > 0) {\n          cols.forEach((col,indexCol)=>{\n            results.push(this.filteredSigns[col].signs[0]);\n            this.filteredSigns[col].signs.splice(0,1);\n          })\n        }*/\n\n      for (\n        let indexNumber = 0;\n        indexNumber < largestIndexLength;\n        indexNumber++\n      ) {\n        // y\n        for (const indexColumn in cols) {\n          // x\n          if (\n            JSON.stringify(\n              this.filteredSigns[cols[indexColumn]].signs[indexNumber]\n            ) != undefined\n          ) {\n            console.log(\n              indexColumn +\n                \", \" +\n                indexNumber +\n                \"; \" +\n                JSON.stringify(\n                  this.filteredSigns[cols[indexColumn]].signs[indexNumber]\n                )\n            );\n            signs.push(\n              this.filteredSigns[cols[indexColumn]].signs[indexNumber]\n            );\n          }\n        }\n      }\n      /*while (signs.length < 50 && cols.length > 0) {\n          let i = parseInt(Math.random() * cols.length);\n          signs.push(this.filteredSigns[cols[i]].signs[indexes[cols[i]]]);\n          indexes[cols[i]]++;\n          if (this.filteredSigns[cols[i]].signs.length == indexes[cols[i]]) {\n            cols.splice(i, 1);\n          }\n          //console.log(\"Current location: Col \" + cols[i] + \", index \" + indexes[cols[i]] );\n          //console.log(\"Column length: \" + cols.length);\n        }*/\n      console.log(\"The indexes are: \" + indexes);\n      console.log(\"The columns are: \" + cols);\n\n      return signs;\n    },\n  },\n  methods: {\n    resetResults: function () {\n      this.requestedSearch = false;\n    },\n    filterSigns: function () {\n      // debugger; // eslint-disable-line no-debugger\n      this.requestedSearch = true;\n\n      let threshold = 1 / 2;\n      this.filteredSigns = [];\n      this.signs.forEach((sign) => {\n        let sel = {\n          start: this.selection.start * this.duration,\n          end: this.selection.end * this.duration,\n        };\n        if (sel.start <= sign.end && sel.end >= sign.start) {\n          let overlap =\n              Math.min(sel.end, sign.end) - Math.max(sel.start, sign.start),\n            signDuration = sign.end - sign.start,\n            ratio = overlap / signDuration;\n          if (ratio >= threshold) {\n            this.filteredSigns.push(sign);\n          }\n        }\n      });\n\n      this.durationOfSelectionString = `${\n        Math.round(this.selection.start * this.duration * 10) / 10\n      } and ${\n        Math.round(this.selection.end * this.duration * 10) / 10\n      } seconds`;\n\n      this.staleResults = false;\n\n      let params = {\n        current_step: this.currentStep,\n        start: this.selection.start * this.duration,\n        end: this.selection.end * this.duration,\n        results_count: this.filteredSigns.length,\n        signs: this.preparedResults.map((el) => {\n          return el.sign;\n        }),\n      };\n      this.$saveAction(\"search\", params);\n    },\n  },\n  watch: {\n    selection: function (newVal, oldVal) {\n      if (newVal.start != oldVal.start || newVal.end != oldVal.end) {\n        this.staleResults = true;\n      }\n    },\n  },\n  props: {\n    currentStep: { type: Number, default: -1 },\n    signs: {\n      type: Array,\n      default: () => [],\n    },\n    selection: {\n      type: Object,\n      default: function () {\n        return {\n          start: 0,\n          end: 1,\n        };\n      },\n    },\n    duration: { type: Number, default: 0 },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/assets/styles/_variables.scss\";\n@import \"@/assets/styles/_mixins.scss\";\n\nbutton {\n  border: none;\n  background-color: $accent;\n  font-weight: 600;\n  @include fs(0);\n  padding: 0.5rem 1rem;\n  width: 100%;\n  cursor: pointer;\n  user-select: none;\n  &:hover {\n    background-color: $accent;\n  }\n  &:active {\n    transform: translateY(1px);\n  }\n}\n\n#results {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  margin-top: 16px;\n  gap: 16px;\n}\n\n#results-header {\n  grid-column: 1 / -1;\n  position: sticky;\n  top: -16px;\n  width: 100%;\n  background-color: $transp-light-accent;\n  backdrop-filter: blur(8px);\n\n  padding: 0.5rem 0;\n  @include fs(-1);\n  font-weight: 440;\n  z-index: 1;\n}\n\n.staleness {\n  font-weight: 400;\n  @include fs(-1);\n  color: #444;\n  a {\n    text-decoration: underline;\n    cursor: pointer;\n  }\n}\n</style>\n"],"mappings":"AAgCA,OAAAA,YAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAF;EAAA;EACAG,KAAA;IACA;MACAC,yBAAA;MACAC,eAAA;MACAC,YAAA;MACAC,aAAA;IACA;EACA;EACAC,QAAA;IACAC,eAAA,WAAAA,CAAA;MACA,IAAAC,KAAA;QACAC,CAAA,QAAAJ,aAAA,CAAAK,MAAA;QAAA;QACAC,OAAA,OAAAC,KAAA,CAAAH,CAAA,EAAAI,IAAA;QAAA;QACAC,IAAA,OAAAF,KAAA,CAAAH,CAAA,EAAAM,IAAA;MACA;MACA;MACAC,OAAA,CAAAC,GAAA,CACA,sBACA,KAAAT,KAAA,GACA,eACA,KAAAA,KAAA,IAAAA,KAAA,CAAAE,MACA;MACAM,OAAA,CAAAC,GAAA,uBAAAH,IAAA,kBAAAA,IAAA,CAAAJ,MAAA;MAEA,IAAAQ,kBAAA;MACA,WAAAC,CAAA,IAAAR,OAAA;QACA,SAAAH,KAAA,CAAAW,CAAA,EAAAX,KAAA,CAAAE,MAAA,GAAAQ,kBAAA;UACAA,kBAAA,QAAAV,KAAA,CAAAW,CAAA,EAAAX,KAAA,CAAAE,MAAA;UACAM,OAAA,CAAAC,GAAA,sBAAAC,kBAAA;QACA;MACA;MACAF,OAAA,CAAAC,GAAA,2BAAAC,kBAAA;;MAEA;AACA;AACA;AACA;AACA;AACA;;MAEA,KACA,IAAAE,WAAA,MACAA,WAAA,GAAAF,kBAAA,EACAE,WAAA,IACA;QACA;QACA,WAAAC,WAAA,IAAAP,IAAA;UACA;UACA,IACAQ,IAAA,CAAAC,SAAA,CACA,KAAAlB,aAAA,CAAAS,IAAA,CAAAO,WAAA,GAAAb,KAAA,CAAAY,WAAA,CACA,KAAAI,SAAA,EACA;YACAR,OAAA,CAAAC,GAAA,CACAI,WAAA,GACA,OACAD,WAAA,GACA,OACAE,IAAA,CAAAC,SAAA,CACA,KAAAlB,aAAA,CAAAS,IAAA,CAAAO,WAAA,GAAAb,KAAA,CAAAY,WAAA,CACA,CACA;YACAZ,KAAA,CAAAiB,IAAA,CACA,KAAApB,aAAA,CAAAS,IAAA,CAAAO,WAAA,GAAAb,KAAA,CAAAY,WAAA,CACA;UACA;QACA;MACA;MACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACAJ,OAAA,CAAAC,GAAA,uBAAAN,OAAA;MACAK,OAAA,CAAAC,GAAA,uBAAAH,IAAA;MAEA,OAAAN,KAAA;IACA;EACA;EACAkB,OAAA;IACAC,YAAA,WAAAA,CAAA;MACA,KAAAxB,eAAA;IACA;IACAyB,WAAA,WAAAA,CAAA;MACA;MACA,KAAAzB,eAAA;MAEA,IAAA0B,SAAA;MACA,KAAAxB,aAAA;MACA,KAAAG,KAAA,CAAAsB,OAAA,CAAAC,IAAA;QACA,IAAAC,GAAA;UACAC,KAAA,OAAAC,SAAA,CAAAD,KAAA,QAAAE,QAAA;UACAC,GAAA,OAAAF,SAAA,CAAAE,GAAA,QAAAD;QACA;QACA,IAAAH,GAAA,CAAAC,KAAA,IAAAF,IAAA,CAAAK,GAAA,IAAAJ,GAAA,CAAAI,GAAA,IAAAL,IAAA,CAAAE,KAAA;UACA,IAAAI,OAAA,GACAC,IAAA,CAAAC,GAAA,CAAAP,GAAA,CAAAI,GAAA,EAAAL,IAAA,CAAAK,GAAA,IAAAE,IAAA,CAAAE,GAAA,CAAAR,GAAA,CAAAC,KAAA,EAAAF,IAAA,CAAAE,KAAA;YACAQ,YAAA,GAAAV,IAAA,CAAAK,GAAA,GAAAL,IAAA,CAAAE,KAAA;YACAS,KAAA,GAAAL,OAAA,GAAAI,YAAA;UACA,IAAAC,KAAA,IAAAb,SAAA;YACA,KAAAxB,aAAA,CAAAoB,IAAA,CAAAM,IAAA;UACA;QACA;MACA;MAEA,KAAA7B,yBAAA,MACAoC,IAAA,CAAAK,KAAA,MAAAT,SAAA,CAAAD,KAAA,QAAAE,QAAA,WACA,QACAG,IAAA,CAAAK,KAAA,MAAAT,SAAA,CAAAE,GAAA,QAAAD,QAAA,WACA;MAEA,KAAA/B,YAAA;MAEA,IAAAwC,MAAA;QACAC,YAAA,OAAAC,WAAA;QACAb,KAAA,OAAAC,SAAA,CAAAD,KAAA,QAAAE,QAAA;QACAC,GAAA,OAAAF,SAAA,CAAAE,GAAA,QAAAD,QAAA;QACAY,aAAA,OAAA1C,aAAA,CAAAK,MAAA;QACAF,KAAA,OAAAD,eAAA,CAAAyC,GAAA,CAAAC,EAAA;UACA,OAAAA,EAAA,CAAAlB,IAAA;QACA;MACA;MACA,KAAAmB,WAAA,WAAAN,MAAA;IACA;EACA;EACAO,KAAA;IACAjB,SAAA,WAAAA,CAAAkB,MAAA,EAAAC,MAAA;MACA,IAAAD,MAAA,CAAAnB,KAAA,IAAAoB,MAAA,CAAApB,KAAA,IAAAmB,MAAA,CAAAhB,GAAA,IAAAiB,MAAA,CAAAjB,GAAA;QACA,KAAAhC,YAAA;MACA;IACA;EACA;EACAkD,KAAA;IACAR,WAAA;MAAAS,IAAA,EAAAC,MAAA;MAAAC,OAAA;IAAA;IACAjD,KAAA;MACA+C,IAAA,EAAA3C,KAAA;MACA6C,OAAA,EAAAA,CAAA;IACA;IACAvB,SAAA;MACAqB,IAAA,EAAAG,MAAA;MACAD,OAAA,WAAAA,CAAA;QACA;UACAxB,KAAA;UACAG,GAAA;QACA;MACA;IACA;IACAD,QAAA;MAAAoB,IAAA,EAAAC,MAAA;MAAAC,OAAA;IAAA;EACA;AACA"}]}