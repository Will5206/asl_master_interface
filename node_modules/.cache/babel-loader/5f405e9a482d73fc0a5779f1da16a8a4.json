{"remainingRequest":"/Users/will5206/Desktop/master_interface/node_modules/babel-loader/lib/index.js!/Users/will5206/Desktop/master_interface/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/will5206/Desktop/master_interface/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/will5206/Desktop/master_interface/src/views/SpanSelection.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/will5206/Desktop/master_interface/src/views/SpanSelection.vue","mtime":1704323184341},{"path":"/Users/will5206/Desktop/master_interface/node_modules/cache-loader/dist/cjs.js","mtime":1704319707089},{"path":"/Users/will5206/Desktop/master_interface/node_modules/babel-loader/lib/index.js","mtime":1704319707261},{"path":"/Users/will5206/Desktop/master_interface/node_modules/cache-loader/dist/cjs.js","mtime":1704319707089},{"path":"/Users/will5206/Desktop/master_interface/node_modules/vue-loader/lib/index.js","mtime":1704319707297}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHZpZGVvanMgZnJvbSAidmlkZW8uanMiOwppbXBvcnQgVGltZWxpbmUgZnJvbSAiLi4vY29tcG9uZW50cy9UaW1lbGluZS52dWUiOwppbXBvcnQgVmlkZW9Db250cm9scyBmcm9tICIuLi9jb21wb25lbnRzL1ZpZGVvQ29udHJvbHMudnVlIjsKaW1wb3J0IFNlYXJjaCBmcm9tICIuLi9jb21wb25lbnRzL1NlYXJjaC52dWUiOwppbXBvcnQgQ3VzdG9tQnV0dG9uIGZyb20gIi4uL2NvbXBvbmVudHMvQ3VzdG9tQnV0dG9uLnZ1ZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiU3BhblNlbGVjdGlvbiIsCiAgY29tcG9uZW50czogewogICAgVGltZWxpbmUsCiAgICBWaWRlb0NvbnRyb2xzLAogICAgU2VhcmNoLAogICAgQ3VzdG9tQnV0dG9uCiAgfSwKICBwcm9wczogewogICAgb3B0aW9uczogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGF1dG9wbGF5OiBmYWxzZSwKICAgICAgICAgIGNvbnRyb2xzOiBmYWxzZSwKICAgICAgICAgIGZpbGw6IHRydWUsCiAgICAgICAgICBzb3VyY2VzOiBbXQogICAgICAgIH07CiAgICAgIH0KICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwbGF5aW5nOiBmYWxzZSwKICAgICAgc2hvd1Jlc3VsdHM6IGZhbHNlLAogICAgICBpbnRlcnZhbDogbnVsbCwKICAgICAgdGltZWxpbmVTZWxlY3Rpb246IHsKICAgICAgICBzdGFydDogMCwKICAgICAgICBlbmQ6IDEKICAgICAgfSwKICAgICAgcGxheWVyOiBudWxsLAogICAgICBzdG9wQXRTZWxlY3Rpb246IGZhbHNlLAogICAgICB2aWRlb1Bvc2l0aW9uOiAwLAogICAgICBleHBlcmltZW50YWxTZXR1cDogbnVsbCwKICAgICAgY3VycmVudFN0ZXA6IDAsCiAgICAgIHNjcmF0Y2hwYWQ6ICIiLAogICAgICBzaWduczogW10sCiAgICAgIGxhdGluU3F1YXJlOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZVNlbGVjdGlvbjogZnVuY3Rpb24gKG5ld0JvdW5kYXJpZXMpIHsKICAgICAgaWYgKHRoaXMudGltZWxpbmVTZWxlY3Rpb24uc3RhcnQgIT0gbmV3Qm91bmRhcmllcy5zdGFydCB8fCB0aGlzLnRpbWVsaW5lU2VsZWN0aW9uLmVuZCAhPSBuZXdCb3VuZGFyaWVzLmVuZCkgewogICAgICAgIHRoaXMudGltZWxpbmVTZWxlY3Rpb24gPSBuZXdCb3VuZGFyaWVzOwogICAgICAgIHRoaXMuJHNhdmVBY3Rpb24oInVwZGF0ZV9zZWxlY3Rpb24iLCB7CiAgICAgICAgICBjdXJyZW50X3N0ZXA6IHRoaXMuY3VycmVudFN0ZXAsCiAgICAgICAgICBzdGFydDogdGhpcy50aW1lbGluZVNlbGVjdGlvbi5zdGFydCAqIHRoaXMuZHVyYXRpb24sCiAgICAgICAgICBlbmQ6IHRoaXMudGltZWxpbmVTZWxlY3Rpb24uZW5kICogdGhpcy5kdXJhdGlvbgogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgY2hhbmdlVGljazogZnVuY3Rpb24gKG5ld1Bvc2l0aW9uKSB7CiAgICAgIHRoaXMucGxheWVyLmN1cnJlbnRUaW1lKG5ld1Bvc2l0aW9uICogdGhpcy5kdXJhdGlvbik7CiAgICAgIHRoaXMudmlkZW9Qb3NpdGlvbiA9IG5ld1Bvc2l0aW9uOwogICAgICB0aGlzLiRzYXZlQWN0aW9uKCJuZXdfcG9zaXRpb24iLCB7CiAgICAgICAgY3VycmVudF9zdGVwOiB0aGlzLmN1cnJlbnRTdGVwLAogICAgICAgIHBvc2l0aW9uOiB0aGlzLnZpZGVvUG9zaXRpb24gKiB0aGlzLmR1cmF0aW9uCiAgICAgIH0pOwogICAgfSwKICAgIGdlbmVyYWxQbGF5OiBmdW5jdGlvbiAoKSB7CiAgICAgIGlmICh0aGlzLnBsYXllcikgewogICAgICAgIGlmICh0aGlzLnBsYXlpbmcpIHsKICAgICAgICAgIHRoaXMucGxheWVyLnBhdXNlKCk7CiAgICAgICAgICB0aGlzLiRzYXZlQWN0aW9uKCJwYXVzZV9jbGljayIsIHsKICAgICAgICAgICAgY3VycmVudF9zdGVwOiB0aGlzLmN1cnJlbnRTdGVwLAogICAgICAgICAgICBwb3NpdGlvbjogdGhpcy52aWRlb1Bvc2l0aW9uCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5wbGF5ZXIucGxheSgpOwogICAgICAgICAgdGhpcy5zdG9wQXRTZWxlY3Rpb24gPSBmYWxzZTsKICAgICAgICAgIHRoaXMuJHNhdmVBY3Rpb24oInBsYXlfY2xpY2siLCB7CiAgICAgICAgICAgIGN1cnJlbnRfc3RlcDogdGhpcy5jdXJyZW50U3RlcCwKICAgICAgICAgICAgcG9zaXRpb246IHRoaXMudmlkZW9Qb3NpdGlvbgogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgc2VsZWN0aW9uUGxheTogZnVuY3Rpb24gKCkgewogICAgICBpZiAodGhpcy5wbGF5ZXIpIHsKICAgICAgICB0aGlzLiRzYXZlQWN0aW9uKCJwbGF5X3NlbGVjdGlvbl9jbGljayIsIHsKICAgICAgICAgIGN1cnJlbnRfc3RlcDogdGhpcy5jdXJyZW50U3RlcCwKICAgICAgICAgIHBvc2l0aW9uOiB0aGlzLnZpZGVvUG9zaXRpb24KICAgICAgICB9KTsKICAgICAgICB0aGlzLnBsYXllci5jdXJyZW50VGltZSh0aGlzLnNlbGVjdGlvblN0YXJ0KTsKICAgICAgICB0aGlzLnN0b3BBdFNlbGVjdGlvbiA9IHRydWU7CiAgICAgICAgaWYgKCF0aGlzLnBsYXlpbmcpIHsKICAgICAgICAgIHRoaXMucGxheWVyLnBsYXkoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBsb2FkQ3VycmVudFN0ZXA6IGZ1bmN0aW9uICgpIHsKICAgICAgaWYgKHRoaXMuY3VycmVudFN0ZXAgPT0gdGhpcy5leHBlcmltZW50YWxTZXR1cC5sZW5ndGgpIHsKICAgICAgICBjb25zb2xlLmxvZygiRmluaXNoZWQgdGhlIHNlcXVlbmNlIik7CiAgICAgICAgdGhpcy4kc2F2ZUFjdGlvbigiZmluaXNoZWRfZXhwZXJpbWVudCIpOwogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCIvdGhhbmsteW91Iik7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5zY3JhdGNocGFkID0gIiI7CiAgICAgICAgdGhpcy4kc2F2ZUFjdGlvbigic3RhcnRlZF92aWRlbyIsIHsKICAgICAgICAgIGN1cnJlbnRfc3RlcDogdGhpcy5jdXJyZW50U3RlcCwKICAgICAgICAgIHZpZGVvOiB0aGlzLmV4cGVyaW1lbnRhbFNldHVwW3RoaXMubGF0aW5TcXVhcmVbdGhpcy5jdXJyZW50U3RlcF1dLnRpdGxlCiAgICAgICAgfSk7CiAgICAgICAgLy8gbG9hZHMgY3VycmVudCB2aWRlby4uLgogICAgICAgIHRoaXMucGxheWVyLnNyYyh7CiAgICAgICAgICBzcmM6IHRoaXMuZXhwZXJpbWVudGFsU2V0dXBbdGhpcy5sYXRpblNxdWFyZVt0aGlzLmN1cnJlbnRTdGVwXV0udmlkZW9fdXJsLAogICAgICAgICAgdHlwZTogInZpZGVvL21wNCIKICAgICAgICB9KTsKICAgICAgICBsZXQgc2VhcmNoUGFuZWwgPSB0aGlzLiRyZWZzLnNlYXJjaCwKICAgICAgICAgIHRpbWVsaW5lID0gdGhpcy4kcmVmcy50aW1lbGluZTsKICAgICAgICBzZWFyY2hQYW5lbC5yZXNldFJlc3VsdHMoKTsKICAgICAgICB0aW1lbGluZS5yZXNldFNlbGVjdGlvbigpOwogICAgICAgIC8vIC4uLmFuZCBjdXJyZW50IHByZS1jb21wdXRlZCBzZWFyY2ggcmVzdWx0cwogICAgICAgIGZldGNoKHRoaXMuZXhwZXJpbWVudGFsU2V0dXBbdGhpcy5sYXRpblNxdWFyZVt0aGlzLmN1cnJlbnRTdGVwXV0uc2lnbnNfZGF0YSwgewogICAgICAgICAgbWV0aG9kOiAiR0VUIiwKICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi90ZXh0IgogICAgICAgICAgfQogICAgICAgIH0pLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UudGV4dCgpKS50aGVuKGRhdGEgPT4gewogICAgICAgICAgdGhpcy5zaWducyA9IEpTT04ucGFyc2UoZGF0YSkuc2lnbnM7CiAgICAgICAgfSkuY2F0Y2goZXJyb3IgPT4gewogICAgICAgICAgY29uc29sZS5lcnJvcigiRXJyb3I6IiwgZXJyb3IpOwogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgYWR2YW5jZVN0ZXA6IGZ1bmN0aW9uICgpIHsKICAgICAgdGhpcy5jdXJyZW50U3RlcCArPSAxOwogICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCJ2aWRlbyIpLmZvckVhY2godmlkID0+IHZpZC5wYXVzZSgpKTsKICAgICAgdGhpcy4kc2F2ZUFjdGlvbigibmV4dF92aWRlbyIsIHsKICAgICAgICBzY3JhdGNocGFkOiB0aGlzLnNjcmF0Y2hwYWQKICAgICAgfSk7CiAgICAgIHRoaXMubG9hZEN1cnJlbnRTdGVwKCk7CiAgICB9LAogICAgaGFuZGxlVXBsb2FkQ2xpY2soKSB7CiAgICAgIHRoaXMuJHJlZnMuZmlsZUlucHV0LmNsaWNrKCk7IC8vIFRyaWdnZXIgdGhlIGZpbGUgaW5wdXQKICAgIH0sCiAgICBoYW5kbGVGaWxlVXBsb2FkKGV2ZW50KSB7CiAgICAgIGNvbnN0IGZpbGUgPSBldmVudC50YXJnZXQuZmlsZXNbMF07CiAgICAgIGNvbnNvbGUubG9nKGZpbGUpOwogICAgICAvLyBQcm9jZXNzIHRoZSBmaWxlIHVwbG9hZCBoZXJlCiAgICAgIC8vIFBhc3MgaXQgdG8gYSB2aWRlbyBwbGF5ZXIgb3IgdXBsb2FkIGl0IHRvIGEgc2VydmVyPwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGZyYW1lQmFzZU5hbWU6IGZ1bmN0aW9uICgpIHsKICAgICAgaWYgKCF0aGlzLmV4cGVyaW1lbnRhbFNldHVwIHx8ICF0aGlzLmxhdGluU3F1YXJlKSB7CiAgICAgICAgcmV0dXJuICJmcmFtZSI7CiAgICAgIH0KICAgICAgcmV0dXJuIHRoaXMuZXhwZXJpbWVudGFsU2V0dXBbdGhpcy5sYXRpblNxdWFyZVt0aGlzLmN1cnJlbnRTdGVwXV0uZnJhbWVfYmFzZV9uYW1lOwogICAgfSwKICAgIGZyYW1lTnVtYmVyOiBmdW5jdGlvbiAoKSB7CiAgICAgIGlmICghdGhpcy5leHBlcmltZW50YWxTZXR1cCB8fCAhdGhpcy5sYXRpblNxdWFyZSkgewogICAgICAgIHJldHVybiAxOwogICAgICB9CiAgICAgIHJldHVybiBwYXJzZUludCh0aGlzLmV4cGVyaW1lbnRhbFNldHVwW3RoaXMubGF0aW5TcXVhcmVbdGhpcy5jdXJyZW50U3RlcF1dLmZyYW1lX251bWJlcik7CiAgICB9LAogICAgbmV4dFN0ZXBUZXh0OiBmdW5jdGlvbiAoKSB7CiAgICAgIGlmICghdGhpcy5leHBlcmltZW50YWxTZXR1cCB8fCAhdGhpcy5sYXRpblNxdWFyZSkgewogICAgICAgIHJldHVybiAiIjsKICAgICAgfQogICAgICBpZiAodGhpcy5jdXJyZW50U3RlcCA8IHRoaXMuZXhwZXJpbWVudGFsU2V0dXAubGVuZ3RoIC0gMSkgewogICAgICAgIHJldHVybiAiTmV4dCB2aWRlbyI7CiAgICAgIH0KICAgICAgcmV0dXJuICJGaW5pc2ggZXhwZXJpbWVudCI7CiAgICB9LAogICAgcGxheWluZ1NlbGVjdGlvbjogZnVuY3Rpb24gKCkgewogICAgICBpZiAoIXRoaXMucGxheWluZyB8fCB0aGlzLmN1cnJlbnRQZXJjZW50YWdlID09IC0xKSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICAgIHJldHVybiB0aGlzLmN1cnJlbnRQZXJjZW50YWdlID49IHRoaXMudGltZWxpbmVTZWxlY3Rpb24uc3RhcnQgJiYgdGhpcy5jdXJyZW50UGVyY2VudGFnZSA8PSB0aGlzLnRpbWVsaW5lU2VsZWN0aW9uLmVuZDsKICAgIH0sCiAgICBjdXJyZW50VGltZTogZnVuY3Rpb24gKCkgewogICAgICBpZiAodGhpcy5wbGF5ZXIpIHsKICAgICAgICByZXR1cm4gdGhpcy5wbGF5ZXIuY3VycmVudFRpbWUoKTsKICAgICAgfQogICAgICByZXR1cm4gMTsKICAgIH0sCiAgICBjdXJyZW50UGVyY2VudGFnZTogZnVuY3Rpb24gKCkgewogICAgICBpZiAoIXRoaXMucGxheWVyKSB7CiAgICAgICAgcmV0dXJuIC0xOwogICAgICB9CiAgICAgIHJldHVybiB0aGlzLnBsYXllci5jdXJyZW50VGltZSgpIC8gdGhpcy5wbGF5ZXIuZHVyYXRpb24oKTsKICAgIH0sCiAgICBkdXJhdGlvbjogZnVuY3Rpb24gKCkgewogICAgICBpZiAodGhpcy5wbGF5ZXIpIHsKICAgICAgICByZXR1cm4gdGhpcy5wbGF5ZXIuZHVyYXRpb24oKTsKICAgICAgfQogICAgICByZXR1cm4gLTE7CiAgICB9LAogICAgc2VsZWN0aW9uU3RhcnQ6IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIHRoaXMudGltZWxpbmVTZWxlY3Rpb24uc3RhcnQgKiB0aGlzLmR1cmF0aW9uOwogICAgfSwKICAgIHNlbGVjdGlvbkVuZDogZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gdGhpcy50aW1lbGluZVNlbGVjdGlvbi5lbmQgKiB0aGlzLmR1cmF0aW9uOwogICAgfSwKICAgIHRpY2tJbnNpZGVTZWxlY3Rpb246IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIHRoaXMuY3VycmVudFRpbWUgPj0gdGhpcy5zZWxlY3Rpb25TdGFydCAmJiB0aGlzLmN1cnJlbnRUaW1lIDw9IHRoaXMuc2VsZWN0aW9uRW5kOwogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIGZldGNoKCIvZGF0YS9leHBlcmltZW50X3NldHVwLmpzb24iLCB7CiAgICAgIG1ldGhvZDogIkdFVCIsCiAgICAgIGhlYWRlcnM6IHsKICAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL3RleHQiCiAgICAgIH0KICAgIH0pLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UudGV4dCgpKS50aGVuKGRhdGEgPT4gewogICAgICB0aGlzLmV4cGVyaW1lbnRhbFNldHVwID0gSlNPTi5wYXJzZShkYXRhKS5zdGVwczsKICAgICAgdGhpcy4kc2F2ZUFjdGlvbigiZW50ZXJlZF9leHBlcmltZW50Iik7CgogICAgICAvLyBjcmVhdGVzIGEgbGF0aW4gc3F1YXJlIHRoYXQgaXMgYWx3YXlzIHRoZSBzYW1lIGZvciB0aGlzIHVzZXIKICAgICAgLy8gZmlyc3QsIGZpbmRzIHRoZSBmaXJzdCBudW1iZXIgaW4gdGhlIHVpZC4KICAgICAgbGV0IGZvdW5kID0gZmFsc2UsCiAgICAgICAgb2Zmc2V0LAogICAgICAgIGkgPSAwOwogICAgICBjb25zb2xlLmxvZyh0aGlzLiR1aWQpOwogICAgICB3aGlsZSAoIWZvdW5kKSB7CiAgICAgICAgaWYgKGlzTmFOKHBhcnNlSW50KHRoaXMuJHVpZFtpXSkpICYmIGkgPCB0aGlzLiR1aWQubGVuZ3RoKSB7CiAgICAgICAgICBpKys7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGZvdW5kID0gdHJ1ZTsKICAgICAgICB9CiAgICAgIH0KICAgICAgLy8gdGhlcmUgd2VyZSBubyBudW1iZXJzIGluc2lkZSB0aGUgdWlkICh2ZXJ5IHVubGlrZWx5ISksIHNvCiAgICAgIC8vIHdpbGwgZGVmYXVsdCB0byAwCiAgICAgIGlmIChpID09IHRoaXMuJHVpZC5sZW5ndGgpIHsKICAgICAgICBvZmZzZXQgPSAwOwogICAgICB9IGVsc2UgewogICAgICAgIG9mZnNldCA9IHBhcnNlSW50KHRoaXMuJHVpZFtpXSk7CiAgICAgIH0KICAgICAgdGhpcy5sYXRpblNxdWFyZS5wdXNoKDApOwogICAgICBsZXQgcyA9ICIwICI7CgogICAgICAvLyBza2lwcyAwLCB3aGljaCBpcyB0aGUgZGVtby4gVGhpcydsbCBhbHdheXMgYmUgdGhlIGZpcnN0IHZpZGVvLgogICAgICBmb3IgKGxldCBpID0gMTsgaSA8IHRoaXMuZXhwZXJpbWVudGFsU2V0dXAubGVuZ3RoOyBpKyspIHsKICAgICAgICB0aGlzLmxhdGluU3F1YXJlLnB1c2goKGkgKyBvZmZzZXQpICUgKHRoaXMuZXhwZXJpbWVudGFsU2V0dXAubGVuZ3RoIC0gMSkgKyAxKTsKICAgICAgICBzICs9IHRoaXMubGF0aW5TcXVhcmVbaV0gKyAiICI7CiAgICAgIH0KICAgICAgY29uc29sZS5sb2coYGluZGV4ZXM6ICR7c31gKTsKICAgICAgdGhpcy4kc2F2ZUFjdGlvbigiY3JlYXRlZF9sYXRpbl9zcXVhcmUiLCB7CiAgICAgICAgbGF0aW5fc3F1YXJlOiB0aGlzLmxhdGluU3F1YXJlLAogICAgICAgIG9mZnNldF91c2VkOiBvZmZzZXQKICAgICAgfSk7CiAgICAgIHRoaXMubG9hZEN1cnJlbnRTdGVwKCk7CiAgICB9KS5jYXRjaChlcnJvciA9PiB7CiAgICAgIGNvbnNvbGUuZXJyb3IoIkVycm9yOiIsIGVycm9yKTsKICAgIH0pOwogICAgdGhpcy5wbGF5ZXIgPSB2aWRlb2pzKHRoaXMuJHJlZnMudmlkZW9QbGF5ZXIsIHRoaXMub3B0aW9ucywgKCkgPT4gewogICAgICB0aGlzLiRyZWZzLnZpZGVvUGxheWVyLmFkZEV2ZW50TGlzdGVuZXIoInBsYXkiLCAoKSA9PiB7CiAgICAgICAgdGhpcy5wbGF5aW5nID0gdHJ1ZTsKICAgICAgICB0aGlzLmludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4gewogICAgICAgICAgaWYgKHRoaXMuc3RvcEF0U2VsZWN0aW9uICYmIHRoaXMuY3VycmVudFRpbWUgPiB0aGlzLnNlbGVjdGlvbkVuZCAmJiB0aGlzLnBsYXllcikgewogICAgICAgICAgICB0aGlzLnBsYXllci5wYXVzZSgpOwogICAgICAgICAgICB0aGlzLnBsYXlpbmcgPSBmYWxzZTsKICAgICAgICAgIH0KICAgICAgICAgIGlmICh0aGlzLnBsYXllci5wYXVzZWQoKSAmJiB0aGlzLmludGVydmFsKSB7CiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbCk7CiAgICAgICAgICB9CiAgICAgICAgICB0aGlzLnZpZGVvUG9zaXRpb24gPSB0aGlzLmN1cnJlbnRUaW1lIC8gdGhpcy5kdXJhdGlvbjsKICAgICAgICB9LCA2MCk7CiAgICAgIH0pOwogICAgICB0aGlzLiRyZWZzLnZpZGVvUGxheWVyLmFkZEV2ZW50TGlzdGVuZXIoInBhdXNlIiwgKCkgPT4gewogICAgICAgIGlmICh0aGlzLmludGVydmFsKSB7CiAgICAgICAgICB0aGlzLiRzYXZlQWN0aW9uKCJlbmRfb2ZfdmlkZW8iLCB7CiAgICAgICAgICAgIGN1cnJlbnRfc3RlcDogdGhpcy5jdXJyZW50U3RlcCwKICAgICAgICAgICAgcG9zaXRpb246IHRoaXMudmlkZW9Qb3NpdGlvbgogICAgICAgICAgfSk7CiAgICAgICAgICBjbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWwpOwogICAgICAgICAgdGhpcy5wbGF5aW5nID0gZmFsc2U7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0pOwogIH0sCiAgYmVmb3JlRGVzdHJveSgpIHsKICAgIGlmICh0aGlzLnBsYXllcikgewogICAgICB0aGlzLnBsYXllci5kaXNwb3NlKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"names":["videojs","Timeline","VideoControls","Search","CustomButton","name","components","props","options","type","Object","default","autoplay","controls","fill","sources","data","playing","showResults","interval","timelineSelection","start","end","player","stopAtSelection","videoPosition","experimentalSetup","currentStep","scratchpad","signs","latinSquare","methods","updateSelection","newBoundaries","$saveAction","current_step","duration","changeTick","newPosition","currentTime","position","generalPlay","pause","play","selectionPlay","selectionStart","loadCurrentStep","length","console","log","$router","push","video","title","src","video_url","searchPanel","$refs","search","timeline","resetResults","resetSelection","fetch","signs_data","method","headers","then","response","text","JSON","parse","catch","error","advanceStep","document","querySelectorAll","forEach","vid","handleUploadClick","fileInput","click","handleFileUpload","event","file","target","files","computed","frameBaseName","frame_base_name","frameNumber","parseInt","frame_number","nextStepText","playingSelection","currentPercentage","selectionEnd","tickInsideSelection","mounted","steps","found","offset","i","$uid","isNaN","s","latin_square","offset_used","videoPlayer","addEventListener","setInterval","paused","clearInterval","beforeDestroy","dispose"],"sources":["src/views/SpanSelection.vue"],"sourcesContent":["<template>\n  <div id=\"span-selection\">\n    <header>\n      <h1>Video {{ currentStep }}</h1>\n      <div id=\"next-video\">\n        <custom-button size=\"small\" :has-border=\"true\" @clicked=\"advanceStep()\"\n          >{{ nextStepText }}\n        </custom-button>\n      </div>\n    </header>\n    <div id=\"video-container\">\n      <video ref=\"videoPlayer\" class=\"video-js\"></video>\n    </div>\n    <div id=\"scratchpad\">\n      <textarea\n        v-model=\"scratchpad\"\n        placeholder=\"Write the video's translation here...\"\n      ></textarea>\n    </div>\n    <div id=\"timeline-container\">\n      <timeline\n        :position=\"videoPosition\"\n        :playing=\"playing\"\n        :duration=\"duration\"\n        :frame-base-name=\"frameBaseName\"\n        :frame-number=\"frameNumber\"\n        ref=\"timeline\"\n        @change=\"updateSelection($event)\"\n        @change-position=\"changeTick\"\n      />\n    </div>\n    <div id=\"video-controls-container\">\n      <video-controls\n        :playing=\"playing\"\n        :playingSelection=\"playingSelection\"\n        :currentTime=\"currentTime\"\n        :duration=\"duration\"\n        @general-play=\"generalPlay()\"\n        @selection-play=\"selectionPlay()\"\n        @upload-video=\"handleUploadClick\"\n      />\n      <input type=\"file\" ref=\"fileInput\" @change=\"handleFileUpload\" hidden />\n    </div>\n    <div id=\"search-panel\">\n      <search\n        ref=\"search\"\n        :selection=\"timelineSelection\"\n        :duration=\"duration\"\n        :currentStep=\"currentStep\"\n        :signs=\"signs\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport videojs from \"video.js\";\nimport Timeline from \"../components/Timeline.vue\";\nimport VideoControls from \"../components/VideoControls.vue\";\nimport Search from \"../components/Search.vue\";\nimport CustomButton from \"../components/CustomButton.vue\";\n\nexport default {\n  name: \"SpanSelection\",\n  components: { Timeline, VideoControls, Search, CustomButton },\n  props: {\n    options: {\n      type: Object,\n      default() {\n        return {\n          autoplay: false,\n          controls: false,\n          fill: true,\n          sources: [],\n        };\n      },\n    },\n  },\n  data() {\n    return {\n      playing: false,\n      showResults: false,\n      interval: null,\n      timelineSelection: { start: 0, end: 1 },\n      player: null,\n      stopAtSelection: false,\n      videoPosition: 0,\n      experimentalSetup: null,\n      currentStep: 0,\n      scratchpad: \"\",\n      signs: [],\n      latinSquare: [],\n    };\n  },\n  methods: {\n    updateSelection: function (newBoundaries) {\n      if (\n        this.timelineSelection.start != newBoundaries.start ||\n        this.timelineSelection.end != newBoundaries.end\n      ) {\n        this.timelineSelection = newBoundaries;\n        this.$saveAction(\"update_selection\", {\n          current_step: this.currentStep,\n          start: this.timelineSelection.start * this.duration,\n          end: this.timelineSelection.end * this.duration,\n        });\n      }\n    },\n    changeTick: function (newPosition) {\n      this.player.currentTime(newPosition * this.duration);\n      this.videoPosition = newPosition;\n      this.$saveAction(\"new_position\", {\n        current_step: this.currentStep,\n        position: this.videoPosition * this.duration,\n      });\n    },\n    generalPlay: function () {\n      if (this.player) {\n        if (this.playing) {\n          this.player.pause();\n          this.$saveAction(\"pause_click\", {\n            current_step: this.currentStep,\n            position: this.videoPosition,\n          });\n        } else {\n          this.player.play();\n          this.stopAtSelection = false;\n          this.$saveAction(\"play_click\", {\n            current_step: this.currentStep,\n            position: this.videoPosition,\n          });\n        }\n      }\n    },\n    selectionPlay: function () {\n      if (this.player) {\n        this.$saveAction(\"play_selection_click\", {\n          current_step: this.currentStep,\n          position: this.videoPosition,\n        });\n        this.player.currentTime(this.selectionStart);\n        this.stopAtSelection = true;\n        if (!this.playing) {\n          this.player.play();\n        }\n      }\n    },\n    loadCurrentStep: function () {\n      if (this.currentStep == this.experimentalSetup.length) {\n        console.log(\"Finished the sequence\");\n        this.$saveAction(\"finished_experiment\");\n        this.$router.push(\"/thank-you\");\n      } else {\n        this.scratchpad = \"\";\n        this.$saveAction(\"started_video\", {\n          current_step: this.currentStep,\n          video:\n            this.experimentalSetup[this.latinSquare[this.currentStep]].title,\n        });\n        // loads current video...\n        this.player.src({\n          src: this.experimentalSetup[this.latinSquare[this.currentStep]]\n            .video_url,\n          type: \"video/mp4\",\n        });\n        let searchPanel = this.$refs.search,\n          timeline = this.$refs.timeline;\n        searchPanel.resetResults();\n        timeline.resetSelection();\n        // ...and current pre-computed search results\n        fetch(\n          this.experimentalSetup[this.latinSquare[this.currentStep]].signs_data,\n          {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/text\",\n            },\n          }\n        )\n          .then((response) => response.text())\n          .then((data) => {\n            this.signs = JSON.parse(data).signs;\n          })\n          .catch((error) => {\n            console.error(\"Error:\", error);\n          });\n      }\n    },\n    advanceStep: function () {\n      this.currentStep += 1;\n      document.querySelectorAll(\"video\").forEach((vid) => vid.pause());\n      this.$saveAction(\"next_video\", { scratchpad: this.scratchpad });\n      this.loadCurrentStep();\n    },\n    handleUploadClick() {\n      this.$refs.fileInput.click(); // Trigger the file input\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      console.log(file);\n      // Process the file upload here\n      // Pass it to a video player or upload it to a server?\n    },\n  },\n  computed: {\n    frameBaseName: function () {\n      if (!this.experimentalSetup || !this.latinSquare) {\n        return \"frame\";\n      }\n      return this.experimentalSetup[this.latinSquare[this.currentStep]]\n        .frame_base_name;\n    },\n    frameNumber: function () {\n      if (!this.experimentalSetup || !this.latinSquare) {\n        return 1;\n      }\n      return parseInt(\n        this.experimentalSetup[this.latinSquare[this.currentStep]].frame_number\n      );\n    },\n    nextStepText: function () {\n      if (!this.experimentalSetup || !this.latinSquare) {\n        return \"\";\n      }\n      if (this.currentStep < this.experimentalSetup.length - 1) {\n        return \"Next video\";\n      }\n      return \"Finish experiment\";\n    },\n    playingSelection: function () {\n      if (!this.playing || this.currentPercentage == -1) {\n        return false;\n      }\n      return (\n        this.currentPercentage >= this.timelineSelection.start &&\n        this.currentPercentage <= this.timelineSelection.end\n      );\n    },\n    currentTime: function () {\n      if (this.player) {\n        return this.player.currentTime();\n      }\n      return 1;\n    },\n    currentPercentage: function () {\n      if (!this.player) {\n        return -1;\n      }\n      return this.player.currentTime() / this.player.duration();\n    },\n    duration: function () {\n      if (this.player) {\n        return this.player.duration();\n      }\n      return -1;\n    },\n    selectionStart: function () {\n      return this.timelineSelection.start * this.duration;\n    },\n    selectionEnd: function () {\n      return this.timelineSelection.end * this.duration;\n    },\n    tickInsideSelection: function () {\n      return (\n        this.currentTime >= this.selectionStart &&\n        this.currentTime <= this.selectionEnd\n      );\n    },\n  },\n  mounted() {\n    fetch(\"/data/experiment_setup.json\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/text\",\n      },\n    })\n      .then((response) => response.text())\n      .then((data) => {\n        this.experimentalSetup = JSON.parse(data).steps;\n        this.$saveAction(\"entered_experiment\");\n\n        // creates a latin square that is always the same for this user\n        // first, finds the first number in the uid.\n        let found = false,\n          offset,\n          i = 0;\n        console.log(this.$uid);\n        while (!found) {\n          if (isNaN(parseInt(this.$uid[i])) && i < this.$uid.length) {\n            i++;\n          } else {\n            found = true;\n          }\n        }\n        // there were no numbers inside the uid (very unlikely!), so\n        // will default to 0\n        if (i == this.$uid.length) {\n          offset = 0;\n        } else {\n          offset = parseInt(this.$uid[i]);\n        }\n\n        this.latinSquare.push(0);\n        let s = \"0 \";\n\n        // skips 0, which is the demo. This'll always be the first video.\n        for (let i = 1; i < this.experimentalSetup.length; i++) {\n          this.latinSquare.push(\n            ((i + offset) % (this.experimentalSetup.length - 1)) + 1\n          );\n          s += this.latinSquare[i] + \" \";\n        }\n\n        console.log(`indexes: ${s}`);\n        this.$saveAction(\"created_latin_square\", {\n          latin_square: this.latinSquare,\n          offset_used: offset,\n        });\n\n        this.loadCurrentStep();\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n    this.player = videojs(this.$refs.videoPlayer, this.options, () => {\n      this.$refs.videoPlayer.addEventListener(\"play\", () => {\n        this.playing = true;\n        this.interval = setInterval(() => {\n          if (\n            this.stopAtSelection &&\n            this.currentTime > this.selectionEnd &&\n            this.player\n          ) {\n            this.player.pause();\n            this.playing = false;\n          }\n          if (this.player.paused() && this.interval) {\n            clearInterval(this.interval);\n          }\n          this.videoPosition = this.currentTime / this.duration;\n        }, 60);\n      });\n      this.$refs.videoPlayer.addEventListener(\"pause\", () => {\n        if (this.interval) {\n          this.$saveAction(\"end_of_video\", {\n            current_step: this.currentStep,\n            position: this.videoPosition,\n          });\n          clearInterval(this.interval);\n          this.playing = false;\n        }\n      });\n    });\n  },\n  beforeDestroy() {\n    if (this.player) {\n      this.player.dispose();\n    }\n  },\n};\n</script>\n\n<style src=\"video.js/dist/video-js.css\"></style>\n<style lang=\"scss\">\n@import \"@/assets/styles/_mixins.scss\";\n@import \"@/assets/styles/_variables.scss\";\n\n$header_height: 48px;\n$timeline_height: 96px;\n$videocontrol_height: 60px;\n$scratchpad_height: 84px;\n$general_padding: 6px;\n\nheader {\n  grid-column: 1/ -1;\n  display: grid;\n  align-items: center;\n  grid-template-columns: max-content max-content auto max-content;\n  gap: 0.5rem;\n  padding-left: 12px;\n  padding-right: 12px;\n  padding-bottom: $general_padding;\n\n  h1,\n  h2 {\n    color: white;\n    @include fs(1);\n  }\n  h1 {\n    font-weight: 700;\n  }\n  h2 {\n    font-weight: 400;\n  }\n  #next-video {\n    grid-column: 4;\n  }\n}\n\n#span-selection {\n  display: grid;\n  grid-template-rows:\n    $header_height\n    calc(\n      100vh - #{$header_height + $timeline_height + $videocontrol_height +\n        $scratchpad_height + 2 * $general_padding}\n    )\n    $scratchpad_height\n    $timeline_height $videocontrol_height;\n  grid-template-columns: auto 576px;\n\n  background-color: black;\n  padding: $general_padding;\n}\n\n#video-container {\n  grid-column: 1;\n  border: 1px solid #333;\n  margin: 0 12px 12px 12px;\n}\n\n#video-controls-container {\n  grid-column: 1 / -1;\n  background-color: #333;\n  position: relative;\n}\n\n#timeline-container {\n  display: grid;\n  background-color: #000;\n  padding: 12px;\n\n  grid-column: 1 / -1;\n}\n\n#scratchpad {\n  margin: 0 12px 24px 12px;\n  display: grid;\n  textarea {\n    border-radius: 0.5rem;\n    padding: 12px;\n    @include fs(0);\n    resize: none;\n  }\n}\n\n#search-panel {\n  background-color: $very-light-accent;\n  border-radius: 4px;\n  grid-row: 2 / span 2;\n  grid-column: 2;\n\n  overflow-y: scroll;\n\n  margin-bottom: 24px;\n  margin-right: 12px;\n  padding: 12px;\n\n  display: grid;\n  grid-gap: 1rem;\n  grid-template-rows: min-content auto;\n}\n\n#results {\n  font-weight: 550;\n\n  .result {\n    background-color: rgba(255, 255, 255, 0.25);\n    padding: 0.5rem 1rem;\n    display: grid;\n    grid-template-columns: 70% 30%;\n    align-items: center;\n    font-size: 14px;\n    color: white;\n\n    &.header {\n      background-color: transparent;\n      font-size: 10px;\n      text-transform: uppercase;\n      letter-spacing: 0.1ch;\n      color: rgba(255, 255, 255, 0.8);\n    }\n    &:not(.header) {\n      margin-top: 2px;\n      border-radius: 0.125rem;\n    }\n    .signs {\n    }\n    .certainty {\n      span {\n        background-color: white;\n        height: 0.5rem;\n        display: block;\n      }\n    }\n  }\n}\n</style>\n"],"mappings":"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"}]}