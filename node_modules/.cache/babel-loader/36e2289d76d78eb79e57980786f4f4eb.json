{"remainingRequest":"/Users/will5206/Desktop/master_interface/node_modules/thread-loader/dist/cjs.js!/Users/will5206/Desktop/master_interface/node_modules/babel-loader/lib/index.js!/Users/will5206/Desktop/master_interface/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/will5206/Desktop/master_interface/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/will5206/Desktop/master_interface/src/views/SpanSelection.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/will5206/Desktop/master_interface/src/views/SpanSelection.vue","mtime":1708120137501},{"path":"/Users/will5206/Desktop/master_interface/node_modules/cache-loader/dist/cjs.js","mtime":1704319707089},{"path":"/Users/will5206/Desktop/master_interface/node_modules/thread-loader/dist/cjs.js","mtime":1704319707089},{"path":"/Users/will5206/Desktop/master_interface/node_modules/babel-loader/lib/index.js","mtime":1704319707261},{"path":"/Users/will5206/Desktop/master_interface/node_modules/cache-loader/dist/cjs.js","mtime":1704319707089},{"path":"/Users/will5206/Desktop/master_interface/node_modules/vue-loader/lib/index.js","mtime":1704319707297}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["videojs","Timeline","VideoControls","Search","CustomButton","name","components","props","options","type","Object","default","autoplay","controls","fill","sources","data","playing","showResults","interval","timelineSelection","start","end","player","stopAtSelection","videoPosition","experimentalSetup","currentStep","scratchpad","signs","latinSquare","methods","updateSelection","newBoundaries","$saveAction","current_step","duration","handleVideoUploaded","videoUrl","console","log","src","load","play","changeTick","newPosition","currentTime","position","generalPlay","pause","selectionPlay","selectionStart","loadCurrentStep","length","$router","push","video","title","fetch","signs_data","then","response","ok","Error","json","catch","error","advanceStep","document","querySelectorAll","forEach","vid","handleUploadClick","$refs","fileInput","click","handleFileUpload","event","file","target","files","startsWith","URL","createObjectURL","$emit","alert","computed","frameBaseName","frame_base_name","frameNumber","parseInt","frame_number","nextStepText","playingSelection","currentPercentage","selectionEnd","tickInsideSelection","mounted","method","headers","found","offset","i","$uid","isNaN","s","latin_square","offset_used","videoPlayer","url","status","addEventListener","setInterval","paused","clearInterval","beforeDestroy","dispose"],"sources":["src/views/SpanSelection.vue"],"sourcesContent":["<template>\n  <div id=\"span-selection\">\n    <header>\n      <h1>Video {{ currentStep }}</h1>\n      <div id=\"next-video\">\n        <custom-button size=\"small\" :has-border=\"true\" @clicked=\"advanceStep()\"\n          >{{ nextStepText }}\n        </custom-button>\n      </div>\n    </header>\n    <div id=\"ainer\">\n      <video ref=\"videoPlayer\" class=\"video-js\"></video>\n    </div>\n    <div id=\"scratchpad\">\n      <textarea\n        v-model=\"scratchpad\"\n        placeholder=\"Write the video's translation here...\"\n      ></textarea>\n\n      <div id=\"timeline-container\">\n        <timeline\n          :position=\"videoPosition\"\n          :playing=\"playing\"\n          :duration=\"duration\"\n          :frame-base-name=\"frameBaseName\"\n          :frame-number=\"frameNumber\"\n          ref=\"timeline\"\n          @change=\"updateSelection($event)\"\n          @change-position=\"changeTick\"\n        />\n      </div>\n      <div id=\"video-controls-container\" class=\"controls-bottom-left\">\n        <video-controls\n          :playing=\"playing\"\n          :playingSelection=\"playingSelection\"\n          :currentTime=\"currentTime\"\n          :duration=\"duration\"\n          @general-play=\"generalPlay()\"\n          @selection-play=\"selectionPlay()\"\n          @upload-video=\"handleUploadClick\"\n          @video-uploaded=\"handleVideoUploaded\"\n        />\n        <!-- Your file input for uploads remains hidden as before -->\n        <input type=\"file\" ref=\"fileInput\" @change=\"handleFileUpload\" hidden />\n      </div>\n    </div>\n    <div id=\"search-panel\">\n      <search\n        ref=\"search\"\n        :selection=\"timelineSelection\"\n        :duration=\"duration\"\n        :currentStep=\"currentStep\"\n        :signs=\"signs\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport videojs from \"video.js\";\nimport Timeline from \"../components/Timeline.vue\";\nimport VideoControls from \"../components/VideoControls.vue\";\nimport Search from \"../components/Search.vue\";\nimport CustomButton from \"../components/CustomButton.vue\";\n\nexport default {\n  name: \"SpanSelection\",\n  components: { Timeline, VideoControls, Search, CustomButton },\n  props: {\n    options: {\n      type: Object,\n      default() {\n        return {\n          autoplay: false,\n          controls: false,\n          fill: true,\n          sources: [],\n        };\n      },\n    },\n  },\n  data() {\n    return {\n      playing: false,\n      showResults: false,\n      interval: null,\n      timelineSelection: { start: 0, end: 1 },\n      player: null,\n      stopAtSelection: false,\n      videoPosition: 0,\n      experimentalSetup: null,\n      currentStep: 0,\n      scratchpad: \"\",\n      signs: [],\n      latinSquare: [],\n    };\n  },\n  methods: {\n    updateSelection: function (newBoundaries) {\n      if (\n        this.timelineSelection.start != newBoundaries.start ||\n        this.timelineSelection.end != newBoundaries.end\n      ) {\n        this.timelineSelection = newBoundaries;\n        this.$saveAction(\"update_selection\", {\n          current_step: this.currentStep,\n          start: this.timelineSelection.start * this.duration,\n          end: this.timelineSelection.end * this.duration,\n        });\n      }\n    },\n    handleVideoUploaded(videoUrl) {\n      console.log(\"Video URL: \", videoUrl); // You already have this for logging.\n      if (this.player) {\n        this.player.src({\n          type: \"video/mp4\", // Assuming the video is in MP4 format; adjust as necessary.\n          src: videoUrl,\n        });\n        this.player.load(); // Load the new video source into the player.\n        this.player.play(); // Optionally, play the video after loading.\n      }\n    },\n    changeTick: function (newPosition) {\n      this.player.currentTime(newPosition * this.duration);\n      this.videoPosition = newPosition;\n      this.$saveAction(\"new_position\", {\n        current_step: this.currentStep,\n        position: this.videoPosition * this.duration,\n      });\n    },\n    generalPlay: function () {\n      if (this.player) {\n        if (this.playing) {\n          this.player.pause();\n          this.$saveAction(\"pause_click\", {\n            current_step: this.currentStep,\n            position: this.videoPosition,\n          });\n        } else {\n          this.player.play();\n          this.stopAtSelection = false;\n          this.$saveAction(\"play_click\", {\n            current_step: this.currentStep,\n            position: this.videoPosition,\n          });\n        }\n      }\n    },\n    selectionPlay: function () {\n      if (this.player) {\n        this.$saveAction(\"play_selection_click\", {\n          current_step: this.currentStep,\n          position: this.videoPosition,\n        });\n        this.player.currentTime(this.selectionStart);\n        this.stopAtSelection = true;\n        if (!this.playing) {\n          this.player.play();\n        }\n      }\n    },\n    loadCurrentStep: function () {\n      if (this.currentStep == this.experimentalSetup.length) {\n        console.log(\"Finished the sequence\");\n        this.$saveAction(\"finished_experiment\");\n        this.$router.push(\"/thank-you\");\n      } else {\n        this.scratchpad = \"\";\n        this.$saveAction(\"started_video\", {\n          current_step: this.currentStep,\n          video:\n            this.experimentalSetup[this.latinSquare[this.currentStep]].title,\n        });\n        // Corrected fetch request without the Content-Type header and with proper JSON handling\n        fetch(\n          this.experimentalSetup[this.latinSquare[this.currentStep]].signs_data\n        )\n          .then((response) => {\n            if (!response.ok) {\n              throw new Error(\"Network response was not ok\");\n            }\n            return response.json();\n          })\n          .then((data) => {\n            this.signs = data.signs;\n          })\n          .catch((error) => {\n            console.error(\"Error fetching signs data:\", error);\n          });\n      }\n    },\n\n    advanceStep: function () {\n      this.currentStep += 1;\n      document.querySelectorAll(\"video\").forEach((vid) => vid.pause());\n      this.$saveAction(\"next_video\", { scratchpad: this.scratchpad });\n      this.loadCurrentStep();\n    },\n    handleUploadClick() {\n      this.$refs.fileInput.click(); // Trigger the file input\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file && file.type.startsWith(\"video/\")) {\n        const videoUrl = URL.createObjectURL(file);\n        console.log(\"Emitting video-uploaded event with URL:\", videoUrl); // Check if this logs\n        this.$emit(\"video-uploaded\", videoUrl);\n      } else {\n        alert(\"Please upload a valid video file.\");\n      }\n    },\n  },\n  computed: {\n    frameBaseName: function () {\n      if (!this.experimentalSetup || !this.latinSquare) {\n        return \"frame\";\n      }\n      return this.experimentalSetup[this.latinSquare[this.currentStep]]\n        .frame_base_name;\n    },\n    frameNumber: function () {\n      if (!this.experimentalSetup || !this.latinSquare) {\n        return 1;\n      }\n      return parseInt(\n        this.experimentalSetup[this.latinSquare[this.currentStep]].frame_number\n      );\n    },\n    nextStepText: function () {\n      if (!this.experimentalSetup || !this.latinSquare) {\n        return \"\";\n      }\n      if (this.currentStep < this.experimentalSetup.length - 1) {\n        return \"Next video\";\n      }\n      return \"Finish experiment\";\n    },\n    playingSelection: function () {\n      if (!this.playing || this.currentPercentage == -1) {\n        return false;\n      }\n      return (\n        this.currentPercentage >= this.timelineSelection.start &&\n        this.currentPercentage <= this.timelineSelection.end\n      );\n    },\n    currentTime: function () {\n      if (this.player) {\n        return this.player.currentTime();\n      }\n      return 1;\n    },\n    currentPercentage: function () {\n      if (!this.player) {\n        return -1;\n      }\n      return this.player.currentTime() / this.player.duration();\n    },\n    duration: function () {\n      if (this.player) {\n        return this.player.duration();\n      }\n      return -1;\n    },\n    selectionStart: function () {\n      return this.timelineSelection.start * this.duration;\n    },\n    selectionEnd: function () {\n      return this.timelineSelection.end * this.duration;\n    },\n    tickInsideSelection: function () {\n      return (\n        this.currentTime >= this.selectionStart &&\n        this.currentTime <= this.selectionEnd\n      );\n    },\n  },\n  mounted() {\n    fetch(\"/data/experiment_setup.json\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/text\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        this.signs = data.signs;\n        this.$saveAction(\"entered_experiment\");\n\n        // creates a latin square that is always the same for this user\n        // first, finds the first number in the uid.\n        let found = false,\n          offset,\n          i = 0;\n        console.log(this.$uid);\n        while (!found) {\n          if (isNaN(parseInt(this.$uid[i])) && i < this.$uid.length) {\n            i++;\n          } else {\n            found = true;\n          }\n        }\n        // there were no numbers inside the uid (very unlikely!), so\n        // will default to 0\n        if (i == this.$uid.length) {\n          offset = 0;\n        } else {\n          offset = parseInt(this.$uid[i]);\n        }\n\n        this.latinSquare.push(0);\n        let s = \"0 \";\n\n        // skips 0, which is the demo. This'll always be the first video.\n        for (let i = 1; i < this.experimentalSetup.length; i++) {\n          this.latinSquare.push(\n            ((i + offset) % (this.experimentalSetup.length - 1)) + 1\n          );\n          s += this.latinSquare[i] + \" \";\n        }\n\n        console.log(`indexes: ${s}`);\n        this.$saveAction(\"created_latin_square\", {\n          latin_square: this.latinSquare,\n          offset_used: offset,\n        });\n\n        this.loadCurrentStep();\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n    console.log(this.$refs.videoPlayer);\n    this.player = videojs(this.$refs.videoPlayer, this.options, () => {\n      console.log(\"Video.js player initialized\", this.player);\n      const url =\n        this.experimentalSetup[this.latinSquare[this.currentStep]].signs_data;\n      fetch(url)\n        .then((response) => {\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          return response.json();\n        })\n        .then((data) => {\n          this.signs = data.signs;\n        })\n        .catch((error) => {\n          console.error(\"Error loading the JSON data:\", error);\n        });\n      this.$refs.videoPlayer.addEventListener(\"play\", () => {\n        this.playing = true;\n        this.interval = setInterval(() => {\n          if (\n            this.stopAtSelection &&\n            this.currentTime > this.selectionEnd &&\n            this.player\n          ) {\n            this.player.pause();\n            this.playing = false;\n          }\n          if (this.player.paused() && this.interval) {\n            clearInterval(this.interval);\n          }\n          this.videoPosition = this.currentTime / this.duration;\n        }, 60);\n      });\n      this.$refs.videoPlayer.addEventListener(\"pause\", () => {\n        if (this.interval) {\n          this.$saveAction(\"end_of_video\", {\n            current_step: this.currentStep,\n            position: this.videoPosition,\n          });\n          clearInterval(this.interval);\n          this.playing = false;\n        }\n      });\n    });\n  },\n  beforeDestroy() {\n    if (this.player) {\n      this.player.dispose();\n    }\n  },\n};\n</script>\n\n<style src=\"video.js/dist/video-js.css\"></style>\n<style lang=\"scss\">\n@import \"@/assets/styles/_mixins.scss\";\n@import \"@/assets/styles/_variables.scss\";\n\n$header_height: 48px;\n$timeline_height: 96px;\n$videocontrol_height: 60px;\n$scratchpad_height: 84px;\n$general_padding: 6px;\n\nheader {\n  grid-column: 1/ -1;\n  display: grid;\n  align-items: center;\n  grid-template-columns: max-content max-content auto max-content;\n  gap: 0.5rem;\n  padding-left: 12px;\n  padding-right: 12px;\n  padding-bottom: $general_padding;\n\n  h1,\n  h2 {\n    color: white;\n    @include fs(1);\n  }\n  h1 {\n    font-weight: 700;\n  }\n  h2 {\n    font-weight: 400;\n  }\n  #next-video {\n    grid-column: 4;\n  }\n}\n\n.controls-bottom-left {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 10px;\n}\n\n#span-selection {\n  display: grid;\n  grid-template-rows:\n    $header_height\n    calc(\n      100vh - #{$header_height + $timeline_height + $videocontrol_height +\n        $scratchpad_height + 2 * $general_padding}\n    )\n    $scratchpad_height\n    $timeline_height $videocontrol_height;\n  grid-template-columns: auto 576px;\n\n  background-color: black;\n  padding: $general_padding;\n}\n\n#video-container {\n  grid-column: 1;\n  border: 1px solid #333;\n  margin: 0 12px 12px 12px;\n}\n\n#video-controls-container {\n  grid-column: 1 / -1;\n  margin-top: 10px;\n  background-color: #333;\n  position: relative;\n}\n\n#timeline-container {\n  display: grid;\n  background-color: #000;\n  padding: 12px;\n\n  grid-column: 1 / -1;\n}\n\n#scratchpad {\n  margin: 0 12px 24px 12px;\n  display: grid;\n  textarea {\n    border-radius: 0.5rem;\n    padding: 12px;\n    @include fs(0);\n    resize: none;\n  }\n}\n\n#search-panel {\n  background-color: $very-light-accent;\n  border-radius: 4px;\n  grid-row: 2 / span 2;\n  grid-column: 2;\n\n  overflow-y: scroll;\n\n  margin-bottom: 24px;\n  margin-right: 12px;\n  padding: 12px;\n\n  display: grid;\n  grid-gap: 1rem;\n  grid-template-rows: min-content auto;\n}\n\n#results {\n  font-weight: 550;\n\n  .result {\n    background-color: rgba(255, 255, 255, 0.25);\n    padding: 0.5rem 1rem;\n    display: grid;\n    grid-template-columns: 70% 30%;\n    align-items: center;\n    font-size: 14px;\n    color: white;\n\n    &.header {\n      background-color: transparent;\n      font-size: 10px;\n      text-transform: uppercase;\n      letter-spacing: 0.1ch;\n      color: rgba(255, 255, 255, 0.8);\n    }\n    &:not(.header) {\n      margin-top: 2px;\n      border-radius: 0.125rem;\n    }\n    .signs {\n    }\n    .certainty {\n      span {\n        background-color: white;\n        height: 0.5rem;\n        display: block;\n      }\n    }\n  }\n}\n</style>\n"],"mappings":"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"}]}